<?xml version="1.0" encoding="UTF-8"?>
<!--
    
    PROJECT
        Name
            APS Administration Web
        
        Code Version
            0.10.0
        
        Description
            This is a web application providing and administration web frame.
        
    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.
        
    LICENSE
        Apache 2.0 (Open Source)
        
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        
          http://www.apache.org/licenses/LICENSE-2.0
        
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
        
    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!
            
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Webs</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>0.10.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-admin-web</artifactId>
    <packaging>war</packaging>

    <name>APS Administration Web</name>

    <description>
        This is a web application providing and administration web frame.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
            Bundle properties 
        -->
        
        <!-- The synbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>
        
        <!-- The bundle activator class -->
        <osgi.bundle.activator></osgi.bundle.activator>
        
        <!-- The context path of a war bundle (WAB). Setting this enables Web-ContextPath: in MANIFEST.MF. -->
        <osgi.web.context.path>apsadminweb</osgi.web.context.path>
        
        <!-- The osgi Bundle-ClassPath manifest entry. -->
        <osgi.bundle.classpath>
            .,
            WEB-INF/classes,
            WEB-INF/lib/atmosphere-compat-jbossweb-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-compat-tomcat-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-compat-tomcat7-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-runtime-1.0.18.vaadin3.jar,
            WEB-INF/lib/commons-cli-1.2.jar,
            WEB-INF/lib/commons-jexl-2.1.1.jar,
            WEB-INF/lib/commons-logging-1.1.1.jar,
            WEB-INF/lib/cssparser-0.9.5.jar,
            WEB-INF/lib/jsoup-1.6.3.jar,
            WEB-INF/lib/sac-1.3.jar,
            WEB-INF/lib/vaadin-client-compiled-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-push-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-server-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-shared-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-shared-deps-1.0.2.jar,
            WEB-INF/lib/vaadin-slf4j-jdk14-1.6.1.jar,
            WEB-INF/lib/vaadin-theme-compiler-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-themes-${vaadin.version}.jar,
            WEB-INF/lib/aps-vaadin-web-tools-${project.version}.jar,
            WEB-INF/lib/aps-web-tools-${project.version}.jar
        </osgi.bundle.classpath>
        
        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>
        
        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            javax.servlet,
            javax.servlet.http,
            javax.xml.namespace,
            org.w3c.dom,
            org.osgi.framework;version="[1.5,2)",
            org.osgi.service.log;version="[1.3,2)",
            org.osgi.util.tracker;version="[1.4,2)",
            se.natusoft.osgi.aps.tools;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.tracker;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.exceptions;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.annotation;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.annotation.activator;version="${aps.import.ver}",
            se.natusoft.osgi.aps.apsadminweb.service;version="${aps.import.ver}",
            se.natusoft.osgi.aps.apsadminweb.service.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.misc.session;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.exceptions;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.web.config;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.config.service;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.config.model;version="${aps.import.ver}"
        </osgi.import.package>
                
        <!-- The private packages. -->
        <osgi.private.package>
        </osgi.private.package>
        
        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>            
        </osgi.export.dependency.package>

        <!-- Resources to include in bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>
        
        <!-- The directory whose content should be embeded into the bundle. -->
        <osgi.embed.directory>WEB-INF/lib</osgi.embed.directory>
        
        <!--
            This specifies the packaging type of the produced bundle to deploy. Should be either "jar" or "war",
            where "jar" is the default. To override this set this property in local pom.
        -->
        <server.deploy.artifact.type>war</server.deploy.artifact.type>
        
        <!--
            Other properties
        -->
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployWABBundleTile:${project.version}</tile.deploy>

    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-vaadin-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-admin-web-service-provider</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Third party
        -->

        <!--
            Vaadin
        -->

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <!--
          Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).

          For widgetset compilation, vaadin-client-compiler is automatically added on the
          compilation classpath by vaadin-maven-plugin so normally there is no need for an
          explicit dependency.
        -->
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive> 
                </configuration>
            </plugin>  

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>                     
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            
            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven.bundle.plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>se.natusoft.osgi.aps.api.web.config.APSAdminConfig</APS-Configs>
                            <Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath>
                            <Web-ContextPath>${osgi.web.context.path}</Web-ContextPath>
                        </manifestEntries>                        
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>
            
        </plugins>
    </build>

</project>
