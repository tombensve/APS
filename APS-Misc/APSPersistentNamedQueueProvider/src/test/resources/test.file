<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS APIs

        Code Version
            1.0.0

        Description
            Provides the APIs for the application platform services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-apis</artifactId>
    <packaging>bundle</packaging>

    <name>APS APIs</name>

    <description>Provides the APIs for the application platform services.</description>

    <properties>
        <!--
            Override of aps root dir.
        -->
        <aps.root.dir>${basedir}/..</aps.root.dir>

        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator></osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.codedoc;version="${project.version}",
            se.natusoft.osgi.aps.annotations;version="${project.version}",
            se.natusoft.osgi.aps.exceptions;version="${project.version}",
            se.natusoft.osgi.aps.api;version="${project.version}",
            se.natusoft.osgi.aps.api.auth.user;version="${project.version}",
            se.natusoft.osgi.aps.api.auth.user.exceptions;version="${project.version}",
            se.natusoft.osgi.aps.api.auth.user.model;version="${project.version}",
            se.natusoft.osgi.aps.api.core;version="${project.version}",
            se.natusoft.osgi.aps.api.core.platform.service;version="${project.version}",
            se.natusoft.osgi.aps.api.core.platform.model;version="${project.version}",
            se.natusoft.osgi.aps.api.core.advice.service;version="${project.version}",
            se.natusoft.osgi.aps.api.core.configold;version="${project.version}",
            se.natusoft.osgi.aps.api.core.configold.annotation;version="${project.version}",
            se.natusoft.osgi.aps.api.core.configold.event;version="${project.version}",
            se.natusoft.osgi.aps.api.core.configold.model;version="${project.version}",
            se.natusoft.osgi.aps.api.core.configold.model.admin;version="${project.version}",
            se.natusoft.osgi.aps.api.core.configold.model.test;version="${project.version}",
            se.natusoft.osgi.aps.api.core.configold.service;version="${project.version}",
            se.natusoft.osgi.aps.api.core.configold.util;version="${project.version}",
            se.natusoft.osgi.aps.api.core.content;version="${project.version}",
            se.natusoft.osgi.aps.api.core.content.service;version="${project.version}",
            se.natusoft.osgi.aps.api.core.filesystem;version="${project.version}",
            se.natusoft.osgi.aps.api.core.filesystem.model;version="${project.version}",
            se.natusoft.osgi.aps.api.core.filesystem.service;version="${project.version}",
            se.natusoft.osgi.aps.api.core.meta;version="${project.version}",
            se.natusoft.osgi.aps.api.data.jdbc.model;version="${project.version}",
            se.natusoft.osgi.aps.api.data.jdbc.service;version="${project.version}",
            se.natusoft.osgi.aps.api.data.jpa.service;version="${project.version}",
            se.natusoft.osgi.aps.api.external.extprotocolsvc;version="${project.version}",
            se.natusoft.osgi.aps.api.external.extprotocolsvc.model;version="${project.version}",
            se.natusoft.osgi.aps.api.external.model.type;version="${project.version}",
            se.natusoft.osgi.aps.api.misc.json;version="${project.version}",
            se.natusoft.osgi.aps.api.misc.json.service;version="${project.version}",
            se.natusoft.osgi.aps.api.misc.json.model;version="${project.version}",
            se.natusoft.osgi.aps.api.misc.session;version="${project.version}",
            se.natusoft.osgi.aps.api.model.json;version="${project.version}",
            se.natusoft.osgi.aps.api.net.discovery.exception;version="${project.version}",
            se.natusoft.osgi.aps.api.net.discovery.model;version="${project.version}",
            se.natusoft.osgi.aps.api.net.discovery.service;version="${project.version}",
            se.natusoft.osgi.aps.api.net.rpc.annotations;version="${project.version}",
            se.natusoft.osgi.aps.api.net.rpc.errors;version="${project.version}",
            se.natusoft.osgi.aps.api.net.rpc.model;version="${project.version}",
            se.natusoft.osgi.aps.api.net.rpc.service;version="${project.version}",
            se.natusoft.osgi.aps.api.net.rpc.exceptions;version="${project.version}",
            se.natusoft.osgi.aps.api.net.groups.service;version="${project.version}",
            se.natusoft.osgi.aps.api.net.messaging.exception;version="${project.version}",
            se.natusoft.osgi.aps.api.net.messaging.service;version="${project.version}",
            se.natusoft.osgi.aps.api.net.messaging.types;version="${project.version}",
            se.natusoft.osgi.aps.api.net.messaging.messages;version="${project.version}",
            se.natusoft.osgi.aps.api.net.time.service;version="${project.version}",
            se.natusoft.osgi.aps.api.net.tcpip;version="${project.version}",
            se.natusoft.osgi.aps.api.net.util;version="${project.version}",
            se.natusoft.osgi.aps.api.web.config;version="${project.version}",
            se.natusoft.osgi.aps.util;version="${project.version}"
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
            <!--
            javax.jcr,
            javax.jcr.lock,
            javax.jcr.nodetype,
            javax.jcr.observation,
            javax.jcr.query,
            javax.jcr.query.qom,
            javax.jcr.retention,
            javax.jcr.security,
            javax.jcr.util,
            javax.jcr.version
            -->
        </osgi.export.dependency.package>

        <!-- Resources to include -->
        <osgi.include.resource>

        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>


        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
            Deploy bundle.
        -->
        <deploy-bundle>true</deploy-bundle>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
            <version>2.0.0</version>
            <scope>compile</scope>
        </dependency>

        <!--dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
            <version>2.0</version>
        </dependency-->
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

            <!--
                Deploy plugins
            -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <docletPath>${project.basedir}/../lib/MarkdownDoclet-3-1.0.jar</docletPath>
                    <doclet>com.visural.doclets.markdown.standard.Standard</doclet>
                    <stylesheetfile>${project.basedir}/../css/apidocs.css</stylesheetfile>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                    <execution>
                        <id>gendocs</id>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                    <execution>
                        <id>jar-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>se.natusoft.maven.plugin</groupId>
                <artifactId>ftp-maven-plugin</artifactId>
                <version>${ftpPlugin.version}</version>
                <executions>
                    <execution>
                        <id>upload</id>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <files>**/.*</files>
                            <targetHost>${javadoc.upload}</targetHost>
                            <targetPort>21</targetPort>
                            <userName>${web.server.user}</userName>
                            <password>${web.server.pw}</password>
                            <targetPath>${javadoc.base.path}/APS</targetPath>
                            <baseDir>${basedir}/target/site/apidocs</baseDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

</project>
./APS-APIs/pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>APS-Archetypes</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
	<modelVersion>4.0.0</modelVersion>

    <groupId>se.natusoft.osgi.aps.archetype</groupId>
    <artifactId>APSBundleArchetype</artifactId>
    <name>Archetype - APSBundleArchetype</name>
</project>
./APS-Archetypes/APSBundleArchetype/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>${project.version}</version>
    </parent>

    <artifactId>${artifactId}</artifactId>
    <packaging>bundle</packaging>

    <name>${artifactId}</name>

    <description>
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=system</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            APS properties.
        -->

        <!-- We register our configuration for auto registration and management. -->
        <aps.config.classes></aps.config.classes>

        <!--
             Trigger tiles.
         -->

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            ${artifactId} dependencies
        -->

    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <!-- Remove comment if you are writing groovy code, and create a src/main/groovy.
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        -->
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Archetypes/APSBundleArchetype/src/main/resources/archetype-resources/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>${project.version}</version>
    </parent>

    <artifactId>${artifactId}</artifactId>
    <packaging>bundle</packaging>

    <name>${artifactId}</name>

    <description>
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=system</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            APS properties.
        -->

        <!-- We register our configuration for auto registration and management. -->
        <aps.config.classes></aps.config.classes>

        <!--
             Trigger tiles.
         -->

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--
            ${artifactId} dependencies
        -->

    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <!-- Remove comment if you are writing groovy code, and create a src/main/groovy.
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        -->
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Archetypes/APSBundleArchetype/target/classes/archetype-resources/pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>APS-Archetypes</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>se.natusoft.osgi.aps.archetype</groupId>
    <artifactId>APSWarBundleArchetype</artifactId>
    <name>Archetype - APSWarBundleArchetype</name>
</project>
./APS-Archetypes/APSWarBundleArchetype/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0</version>
    </parent>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>war</packaging>

    <name>APS ${artifactId}</name>

    <description>
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The synbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>Activator</osgi.bundle.activator>

        <!-- The context path of a war bundle (WAB). Setting this enables Web-ContextPath: in MANIFEST.MF. -->
        <osgi.web.context.path>myweb</osgi.web.context.path>

        <!-- The osgi Bundle-ClassPath manifest entry. -->
        <osgi.bundle.classpath>WEB-INF/classes, WEB-INF/lib/vaadin-6.6.4.jar</osgi.bundle.classpath>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            javax.servlet,
            javax.servlet.http,
            javax.xml.namespace,
            org.w3c.dom,
            org.osgi.framework;version="[1.5,2)",
            org.osgi.service.log;version="[1.3,2)",
            org.osgi.util.tracker;version="[1.4,2)",
            se.natusoft.osgi.aps.tools;version="[1.0,2)",
            se.natusoft.osgi.aps.tools.tracker;version="[1.0,2)"
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps._web,
            se.natusoft.osgi.aps._web.vaadin._WebApp
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle. -->
        <osgi.embed.directory>WEB-INF/lib</osgi.embed.directory>


        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployWABBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Third party
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin</artifactId>
            <version>6.6.4</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <!-- Remove comment if you are writing groovy code, and create a src/main/groovy.
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        -->
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-web-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath>
                            <Web-ContextPath>${osgi.web.context.path}</Web-ContextPath>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Archetypes/APSWarBundleArchetype/src/main/resources/archetype-resources/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0</version>
    </parent>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>war</packaging>

    <name>APS ${artifactId}</name>

    <description>
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The synbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>Activator</osgi.bundle.activator>

        <!-- The context path of a war bundle (WAB). Setting this enables Web-ContextPath: in MANIFEST.MF. -->
        <osgi.web.context.path>myweb</osgi.web.context.path>

        <!-- The osgi Bundle-ClassPath manifest entry. -->
        <osgi.bundle.classpath>WEB-INF/classes, WEB-INF/lib/vaadin-6.6.4.jar</osgi.bundle.classpath>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            javax.servlet,
            javax.servlet.http,
            javax.xml.namespace,
            org.w3c.dom,
            org.osgi.framework;version="[1.5,2)",
            org.osgi.service.log;version="[1.3,2)",
            org.osgi.util.tracker;version="[1.4,2)",
            se.natusoft.osgi.aps.tools;version="[1.0,2)",
            se.natusoft.osgi.aps.tools.tracker;version="[1.0,2)"
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps._web,
            se.natusoft.osgi.aps._web.vaadin._WebApp
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle. -->
        <osgi.embed.directory>WEB-INF/lib</osgi.embed.directory>


        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployWABBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--
            Third party
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin</artifactId>
            <version>6.6.4</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <!-- Remove comment if you are writing groovy code, and create a src/main/groovy.
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        -->
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-web-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath>
                            <Web-ContextPath>${osgi.web.context.path}</Web-ContextPath>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Archetypes/APSWarBundleArchetype/target/classes/archetype-resources/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>APS-Archetypes</artifactId>
    <groupId>se.natusoft.osgi.aps</groupId>
    <version>1.0.0</version>

    <packaging>pom</packaging>

    <name>APS Archetypes</name>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>APSBundleArchetype</module>
        <module>APSWarBundleArchetype</module>
    </modules>
</project>
./APS-Archetypes/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Simple User Service Auth Service Provider

        Code Version
            1.0.0

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-21: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Auth</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-simple-user-service-auth-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Simple User Service Auth Service Provider</name>

    <description>
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.auth,
            se.natusoft.osgi.aps.auth.service
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--APS-Configs></APS-Configs-->
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Auth/APSSimpleUserServiceAuthServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            APS Simple User Service Provider

        Code Version
            1.0.0

        Description
            Provides an implementation of APSSimpleUserService backed by a database.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-02: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Auth</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-simple-user-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Simple User Service Provider</name>

    <description>
        Provides an implementation of APSSimpleUserService backed by a database.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- Configuration models -->
        <aps.config.classes>se.natusoft.osgi.aps.userservice.config.UserServiceInstConfig</aps.config.classes>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <!--
            This will include import of 2 Open JPA packages needed because we compile-time enhance the entities
            using the Open JPA enhancer below! The alternative would be to add a java-agent to the JVM at
            server startup. The provided APSJPAService implementation uses OpenJPA which is why the OpenJPA
            enhancer needs to be run.
        -->
        <osgi.import.package>
            *
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.userservice,
            se.natusoft.osgi.aps.userservice.config,
            se.natusoft.osgi.aps.userservice.entities,
            se.natusoft.osgi.aps.userservice.util,
            se.natusoft.osgi.aps.userservice.service
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
            {maven-resources}, META-INF/persistence.xml=target/classes/META-INF/persistence.xml
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile,system</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Trigger tiles.
        -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Other
        -->

        <!--
            We get the javax.persistence package from here compile time.
        -->
        <!--suppress osmorcNonOsgiMavenDependency -->
        <dependency>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa-all</artifactId>
            <version>2.2.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>10.9.1.0</version>
            <scope>compile</scope>
        </dependency>

        <!--dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysqldriver</artifactId>
            <version>5.1.26</version>
            <scope>compile</scope>

        </dependency-->

    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OpenJPA support
            -->
            <plugin>
                <groupId>org.apache.openjpa</groupId>
                <artifactId>openjpa-maven-plugin</artifactId>
                <version>2.2.0</version>

                <configuration>
                    <includes>**/entities/*.class</includes>
                    <excludes>**/entities/XML*.class</excludes>
                    <addDefaultConstructor>true</addDefaultConstructor>
                    <enforcePropertyRestrictions>true</enforcePropertyRestrictions>
                </configuration>

                <executions>
                    <execution>
                        <id>enhancer</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--APS-Externalizable>true</APS-Externalizable-->
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <JPA-PersistenceUnits>UserAdmin</JPA-PersistenceUnits>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <repositories>
    </repositories>
</project>
./APS-Auth/APSSimpleUserServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Auth

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>

    <artifactId>APS-Auth</artifactId>

    <name>APS Auth</name>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>APSSimpleUserServiceProvider</module>
        <module>APSSimpleUserServiceAuthServiceProvider</module>
    </modules>

</project>
./APS-Auth/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Configuration Service Provider

        Code Version
            1.0.0

        Description
            A more advanced configuration service that uses annotated interfaces to
            describe and provide access to configuration. It supports structured
            configuration models.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-02: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Core</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-configuration-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Configuration Service Provider</name>

    <description>
        A more advanced configuration service that uses annotated interfaces to
        describe and provide access to configuration. It supports structured
        configuration models.
    </description>

    <properties>
        <!--
            Bundle properties
        -->
        <!-- The synbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.core.config.APSConfigServiceActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.core.config.api
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.core.config,
            se.natusoft.osgi.aps.core.config.config,
            se.natusoft.osgi.aps.core.config.model,
            se.natusoft.osgi.aps.core.config.model.admin,
            se.natusoft.osgi.aps.core.config.service,
            se.natusoft.osgi.aps.core.config.store,
            se.natusoft.osgi.aps.core.config.tools,
            se.natusoft.osgi.aps.core.config.sync
        </osgi.private.package>

        <!-- Resources to include in the bundle jar. -->
        <osgi.include.resource>

        </osgi.include.resource>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Trigger tiles.
        -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!--
        Dependencies
    -->
    <dependencies>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--APS-Externalizable>true</APS-Externalizable-->
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Core/APSConfigServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Filesystem Service Provider

        Code Version
            1.0.0

        Description
            Provides access to a service/application private filesystem that remains until the
            service/application specifically deletes it. This is independent of the OSGi server
            it is running in (if configured).

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-02: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Core</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-filesystem-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Filesystem Service Provider</name>

    <description>
        Provides access to a service/application private filesystem that remains until the
        service/application specifically deletes it. This is independent of the OSGi server
        it is running in (if configured).
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.core.filesystem.APSFilesystemActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.core.filesystem,
            se.natusoft.osgi.aps.core.filesystem.service,
            se.natusoft.osgi.aps.core.filesystem.model
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package></osgi.export.dependency.package>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
           Resources to include.
        -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!--
            Trigger tiles.
        -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <doc.inputs>
            APS-Core/APSFilesystemServiceProvider/docs/filesets/doc-files.fs
        </doc.inputs>
    </properties>

    <!--
        Dependencies
    -->
    <dependencies>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Core/APSFilesystemServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
	    <artifactId>APS-Core</artifactId>
    	<groupId>se.natusoft.osgi.aps</groupId>
    	<version>1.0.0</version>
        <relativePath>..</relativePath>
  	</parent>

    <artifactId>aps-log-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Log service Provider</name>

    <description>Provides an implementation of the standard OSGi LogService.</description>

    <properties>
        <!--
            Bundle properties
        -->
        <osgi.export.package>
            se.natusoft.osgi.aps.core.filesystem.service
        </osgi.export.package>
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>
        <osgi.private.package></osgi.private.package>
        <osgi.bundle.activator>se.natusoft.osgi.aps.logservice.Activator</osgi.bundle.activator>
        <osgi.export.service>se.natusoft.osgi.aps.core.filesystem.service.APSFilesystemServiceProvider</osgi.export.service>
        <osgi.embed.dependency></osgi.embed.dependency>

        <!--
            Other properties.
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!--
        Dependencies
    -->
    <dependencies>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>1.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>1.4.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>

    </build>

</project>
./APS-Core/APSLogServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            APS Platform Service Provider

        Code Version
            1.0.0

        Description
            Provides a platform specific configuration and service providing platform instance
            specific information.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-02: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Core</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-platform-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Platform Service Provider</name>

    <description>
        Provides a platform specific configuration and service providing platform instance
        specific information.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The synbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.platform.APSPlatformActivator</osgi.bundle.activator>

        <aps.config.classes>se.natusoft.osgi.aps.platform.config.APSPlatformConfig</aps.config.classes>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.platform.service;version="${project.version}"
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.platform,
            se.natusoft.osgi.aps.platform.service.provider,
            se.natusoft.osgi.aps.platform.config
        </osgi.private.package>

        <!-- Resources to include in bundle -->
        <osgi.include.resource></osgi.include.resource>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package></osgi.export.dependency.package>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Trigger tiles.
        -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Externalizable>true</APS-Externalizable>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>

    </build>

</project>
./APS-Core/APSPlatformServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Core

        Code Version
            1.0.0

        Description
            Core service providers.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>APS-Core</artifactId>
    <packaging>pom</packaging>

    <name>APS Core</name>
    <description>Core service providers.</description>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>APSConfigServiceProvider</module>
        <!--module>APSLogServiceProvider</module-->
        <module>APSFilesystemServiceProvider</module>
        <module>APSPlatformServiceProvider</module>
    </modules>
</project>
./APS-Core/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            APS Data Source

        Code Version
            1.0.0

        Description
            This bundle provides data source definitions configuration and a service to lookup
            the configured data source definitions with. These are not javax.sql.DataSource
            objects! This only provides the configuration data to setup a data source. Some
            other bundle can use this to configure a DataSource, a connection pool, JPA, etc
            from this.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-02: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Data</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-datasource</artifactId>
    <packaging>bundle</packaging>

    <name>APS Data Source</name>

    <description>
        This bundle provides data source definitions configuration and a service to lookup
        the configured data source definitions with. These are not javax.sql.DataSource
        objects! This only provides the configuration data to setup a data source. Some
        other bundle can use this to configure a DataSource, a connection pool, JPA, etc
        from this.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.dsconfig.DSConfigActivator</osgi.bundle.activator>

        <!-- Configuration models -->
        <aps.config.classes>se.natusoft.osgi.aps.dsconfig.config.APSDataSourcesConfig</aps.config.classes>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.dsconfig,
            se.natusoft.osgi.aps.dsconfig.config,
            se.natusoft.osgi.aps.dsconfig.model,
            se.natusoft.osgi.aps.dsconfig.service
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <manifest.entries>
        </manifest.entries>

        <!--
            Trigger tiles.
        -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit4</artifactId>
            <version>2.16</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-configuration-service-provider</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Data/APSDataSource/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS OpenJPA Provider

        Code Version
            1.0.0

        Description
            Provides an implementation of APSJPAService using OpenJPA.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-02: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Data</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-openjpa-provider</artifactId>
    <packaging>jar</packaging>

    <!--
        Please note that this pom has packaging jar, not bundle! The problem is that jpa-2.2.0.jar
        is locally embedded within the bundle. This is a problem due to that Apache Felix Bundle Plugin
        examines the jars all references and determines which is not locally available and thereby forces
        Import-Package entries for those. This is correct behavior and is what you want in most
        cases, but in this case jpa-2.2.0.jar has non required dependencies which we don't use
        but the bundle plugin makes these required dependencies by adding them to Import-Package.

        To solve this I have made this a simple jar and provided my own MANIFEST.MF and jpa-2.2.0.jar
        in src/main/resources/META-INF and src/main/resources/lib respectively.
    -->

    <name>APS OpenJPA Provider</name>

    <description>
        Provides an implementation of APSJPAService using OpenJPA.
    </description>

    <properties>
        <!--
            Trigger tiles.
        -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Other
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Other
        -->
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.enterprise</artifactId>
            <version>4.2.0</version>
            <scope>provided</scope>
        </dependency>

        <!--suppress osmorcNonOsgiMavenDependency -->
        <dependency>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa-all</artifactId>
            <version>2.2.0</version>
            <scope>provided</scope>
        </dependency>

        <!--suppress osmorcNonOsgiMavenDependency -->
        <dependency>
            <groupId>se.natusoft.tools.xob</groupId>
            <artifactId>xob</artifactId>
            <version>5.0</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>bintray-tommy-maven-repo</id>
            <url>http://dl.bintray.com/tommy/maven</url>
        </repository>
    </repositories>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <!--manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile-->
                        <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <!--
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            //Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>
            -->
        </plugins>
    </build>

</project>
./APS-Data/APSOpenJPAProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Data

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>

    <artifactId>APS-Data</artifactId>

    <name>APS Data</name>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>APSDataSource</module>
        <module>APSOpenJPAProvider</module>
    </modules>
</project>
./APS-Data/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS JSON Library

        Code Version
            1.0.0

        Description
            Provides a JSON parser and creator. Please note that this bundle has no dependencies to any
            other APS bundle! It can be used as is without APS in any Java application and OSGi container.
            The reason for this is that I do use it elsewhere and don't want to keep 2 different copies of
            the code. OSGi wise this is a library. All packages are exported and no activator nor services
            are provided.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Libraries</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-json-lib</artifactId>
    <packaging>bundle</packaging>

    <name>APS JSON Library</name>

    <description>
        Provides a JSON parser and creator. Please note that this bundle has no dependencies to any
        other APS bundle! It can be used as is without APS in any Java application and OSGi container.
        The reason for this is that I do use it elsewhere and don't want to keep 2 different copies of
        the code. OSGi wise this is a library. All packages are exported and no activator nor services
        are provided.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator></osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.json,
            se.natusoft.osgi.aps.json.tools
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Trigger tiles.
        -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

            <!--
                Deploy plugins
            -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <docletPath>${project.basedir}/../../lib/MarkdownDoclet-3-1.0.jar</docletPath>
                    <doclet>com.visural.doclets.markdown.standard.Standard</doclet>
                    <stylesheetfile>${project.basedir}/../../css/apidocs.css</stylesheetfile>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                    <execution>
                        <id>gendocs</id>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                    <execution>
                        <id>jar-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>se.natusoft.maven.plugin</groupId>
                <artifactId>ftp-maven-plugin</artifactId>
                <version>${ftpPlugin.version}</version>
                <executions>
                    <execution>
                        <id>upload</id>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <files>**/.*</files>
                            <targetHost>${javadoc.upload}</targetHost>
                            <targetPort>21</targetPort>
                            <userName>${web.server.user}</userName>
                            <password>${web.server.pw}</password>
                            <targetPath>${javadoc.base.path}/APSJSONLib</targetPath>
                            <baseDir>${basedir}/target/site/apidocs</baseDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
./APS-Libraries/APSJSONLib/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Tools Library

        Code Version
            1.0.0

        Description
            Provides a library of utilities, among them APSServiceTracker used by all other APS bundles.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Libraries</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-tools-lib</artifactId>
    <packaging>bundle</packaging>

    <name>APS Tools Library</name>

    <description>
        Provides a library of utilities, among them APSServiceTracker used by all other APS bundles.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <!--suppress CheckTagEmptyBody -->
        <osgi.bundle.activator></osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.tools;version="${project.version}",
            se.natusoft.osgi.aps.tools.tracker;version="${project.version}",
            se.natusoft.osgi.aps.tools.models;version="${project.version}",
            se.natusoft.osgi.aps.tools.data;version="${project.version}",
            se.natusoft.osgi.aps.tools.annotation;version="${project.version}",
            se.natusoft.osgi.aps.tools.annotation.activator;version="${project.version}",
            se.natusoft.osgi.aps.tools.apis;version="${project.version}",
            se.natusoft.osgi.aps.tools.exceptions;version="${project.version}",
            se.natusoft.osgi.aps.tools.tuples;version="${project.version}",
            se.natusoft.osgi.aps.tools.debug;version="${project.version}",
            se.natusoft.osgi.aps.tools.util;version="${project.version}"
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- Resources to include in bundle. -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <profiles>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-osgi-test-tools</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-service-test-support</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <!--suppress NonOsgiMavenDependency -->
        <dependency>
            <groupId>se.natusoft.annotation</groupId>
            <artifactId>bean-annotation-processor</artifactId>
            <version>1.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>bintray-tommy-maven</id>
            <name>Tommys Bintray Maven Repo</name>
            <url>http://dl.bintray.com/tommy/maven</url>
        </repository>
    </repositories>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

            <!--
                Deploy plugins
            -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <docletPath>${project.basedir}/../../lib/MarkdownDoclet-3-1.0.jar</docletPath>
                    <doclet>com.visural.doclets.markdown.standard.Standard</doclet>
                    <stylesheetfile>${project.basedir}/../../css/apidocs.css</stylesheetfile>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                    <execution>
                        <id>gendocs</id>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                    <execution>
                        <id>jar-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>se.natusoft.maven.plugin</groupId>
                <artifactId>ftp-maven-plugin</artifactId>
                <version>${ftpPlugin.version}</version>
                <executions>
                    <execution>
                        <id>upload</id>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <files>**/.*</files>
                            <targetHost>${javadoc.upload}</targetHost>
                            <targetPort>21</targetPort>
                            <userName>${web.server.user}</userName>
                            <password>${web.server.pw}</password>
                            <targetPath>${javadoc.base.path}/APSToolsLib</targetPath>
                            <baseDir>${basedir}/target/site/apidocs</baseDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
./APS-Libraries/APSToolsLib/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Vaadin Web Tools

        Code Version
            1.0.0

        Description
            This provides some utility classes for web applications.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--
        This is not a bundle due to dependencies to Vaadin. Not all OSGi servers seem to be able to
        deploy the vaadin.jar as a bundle. Glassfish can, but Virgo fails. Thereby this has to be
        included in WEB-INF/lib instead.
    -->
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Libraries</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-vaadin-web-tools</artifactId>
    <packaging>jar</packaging>

    <name>APS Vaadin Web Tools</name>

    <description>
        This provides some utility classes for web applications.
    </description>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-web-tools</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--
            Vaadin
        -->

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--
          Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).

          For widgetset compilation, vaadin-client-compiler is automatically added on the
          compilation classpath by vaadin-maven-plugin so normally there is no need for an
          explicit dependency.
        -->
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <docletPath>${project.basedir}/../../lib/MarkdownDoclet-3-1.0.jar</docletPath>
                    <doclet>com.visural.doclets.markdown.standard.Standard</doclet>
                    <stylesheetfile>${project.basedir}/../../css/apidocs.css</stylesheetfile>
                </configuration>
                <executions>
                    <execution>
                        <id>gendocs</id>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                    <execution>
                        <id>jar-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>se.natusoft.maven.plugin</groupId>
                <artifactId>ftp-maven-plugin</artifactId>
                <version>${ftpPlugin.version}</version>
                <executions>
                    <execution>
                        <id>upload</id>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <files>**/.*</files>
                            <targetHost>${javadoc.upload}</targetHost>
                            <targetPort>21</targetPort>
                            <userName>${web.server.user}</userName>
                            <password>${web.server.pw}</password>
                            <targetPath>${javadoc.base.path}/APSWebTools</targetPath>
                            <baseDir>${basedir}/target/site/apidocs</baseDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
./APS-Libraries/APSVaadinWebTools/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Web Tools

        Code Version
            1.0.0

        Description
            This provides some utility classes for web applications.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--
        This is not a bundle due to dependencies to Vaadin. Not all OSGi servers seem to be able to
        deploy the vaadin.jar as a bundle. Glassfish can, but Virgo fails. Thereby this has to be
        included in WEB-INF/lib instead.
    -->
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Libraries</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-web-tools</artifactId>
    <packaging>jar</packaging>

    <name>APS Web Tools</name>

    <description>
        This provides some utility classes for web applications.
    </description>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <docletPath>${project.basedir}/../../lib/MarkdownDoclet-3-1.0.jar</docletPath>
                    <doclet>com.visural.doclets.markdown.standard.Standard</doclet>
                    <stylesheetfile>${project.basedir}/../../css/apidocs.css</stylesheetfile>
                </configuration>
                <executions>
                    <execution>
                        <id>gendocs</id>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                    <execution>
                        <id>jar-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>se.natusoft.maven.plugin</groupId>
                <artifactId>ftp-maven-plugin</artifactId>
                <version>${ftpPlugin.version}</version>
                <executions>
                    <execution>
                        <id>upload</id>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <files>**/.*</files>
                            <targetHost>${javadoc.upload}</targetHost>
                            <targetPort>21</targetPort>
                            <userName>${web.server.user}</userName>
                            <password>${web.server.pw}</password>
                            <targetPath>${javadoc.base.path}/APSWebTools</targetPath>
                            <baseDir>${basedir}/target/site/apidocs</baseDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
./APS-Libraries/APSWebTools/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Libraries

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>APS-Libraries</artifactId>
    <packaging>pom</packaging>

    <name>APS Libraries</name>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>APSToolsLib</module>
        <module>APSJSONLib</module>
        <module>APSWebTools</module>
        <module>APSVaadinWebTools</module>
    </modules>
</project>
./APS-Libraries/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS JSON Service Provider

        Code Version
            1.0.0

        Description
            Provides an implementation of aps-apis:se.natusoft.osgi.aps.api.misc.json.service.APSJSONExtendedService
            using aps-json-lib as JSON parser/creator.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Misc</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-json-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS JSON Service Provider</name>

    <description>
        Provides an implementation of aps-apis:se.natusoft.osgi.aps.api.misc.json.service.APSJSONExtendedService
        using aps-json-lib as JSON parser/creator.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.json.APSJSONServiceActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.json,
            se.natusoft.osgi.aps.json.service,
            se.natusoft.osgi.aps.json.model
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-json-lib</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Misc/APSJSONServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Misc</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-persistent-named-queue-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Persistent Named Queue Service Provider</name>

    <description>
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.persistentqueue
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=system</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            APS properties.
        -->

        <!-- We register our configuration for auto registration and management. -->
        <aps.config.classes></aps.config.classes>

        <!--
             Trigger tiles.
         -->

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <scope>provided</scope>
            <classifier>indy</classifier>
        </dependency>
        <dependency>
            <groupId>org.codehaus.gpars</groupId>
            <artifactId>gpars</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jsr166-mirror</groupId>
            <artifactId>jsr166y</artifactId>
            <version>1.7.0</version>
        </dependency>
        <!--
            aps-persistent-named-queue-service-provider dependencies
        -->

    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Misc/APSPersistentNamedQueueProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Resolving Bundle Deployer

        Code Version
            1.0.0

        Description
            Deploys bundles resolving dependencies as automatically as possible by accepting a few
            deploy failures and retrying until it works or a fail threshold has been reached.

            Unless the server deployed on supports WABs using the extender pattern, no war files
            will deploy correctly.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Misc</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-resolving-bundle-deployer</artifactId>
    <packaging>bundle</packaging>

    <name>APS Resolving Bundle Deployer</name>

    <description>
        Deploys bundles resolving dependencies as automatically as possible by accepting a few
        deploy failures and retrying until it works or a fail threshold has been reached.

        Unless the server deployed on supports WABs using the extender pattern, no war files
        will deploy correctly.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.bundledeployer.APSResolvingBundleDeployerActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.bundledeployer,
            se.natusoft.osgi.aps.bundledeployer.config,
            se.natusoft.osgi.aps.bundledeployer.deploy
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Specifies configuration models to manage.
        -->
        <aps.config.classes>
            se.natusoft.osgi.aps.bundledeployer.config.APSBundleDeployerConfig
        </aps.config.classes>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Misc/APSResolvingBundleDeployer/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Session Service Provider

        Code Version
            1.0.0

        Description
            Provides an OSGi server wide session.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Misc</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-session-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Session Service Provider</name>

    <description>
        Provides an OSGi server wide session.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.session.APSSessionServiceProviderActivator</osgi.bundle.activator>

        <aps.config.classes>se.natusoft.osgi.aps.session.config.SessionConfig</aps.config.classes>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            *
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.session,
            se.natusoft.osgi.aps.session.service,
            se.natusoft.osgi.aps.session.config
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Misc/APSSessionServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Misc Services

        Code Version
            1.0.0

        Description
            Miscellaneous APS Service Providers

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>APS-Misc</artifactId>
    <packaging>pom</packaging>

    <name>APS Misc Services</name>
    <description>Miscellaneous APS Service Providers</description>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>APSJSONServiceProvider</module>
        <module>APSSessionServiceProvider</module>
        <module>APSResolvingBundleDeployer</module>
        <module>APSPersistentNamedQueueProvider</module>
    </modules>

</project>
./APS-Misc/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-default-discovery-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Default Discovery Service Provider</name>

    <description>
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.discoveryservice.config
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.discoveryservice
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=system</osgi.embed.dependency>

        <!-- The directory whose content should be embedded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            APS properties.
        -->

        <!-- We register our configuration for auto registration and management. -->
        <aps.config.classes>
            se.natusoft.osgi.aps.discoveryservice.config.DiscoveryConfig
        </aps.config.classes>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            APSDefaultDiscoveryServiceProvider dependencies
        -->

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovyVersion}</version>
            <scope>provided</scope>
            <classifier>indy</classifier>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSDefaultDiscoveryServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS External Protocol Extender

        Code Version
            1.0.0

        Description
            This does two things:

            1) Looks for "APS-Externalizable: true" MANIFEST.MF entry in deployed bundles and if found and bundle status is
            ACTIVE, analyzes the service API and creates an APSExternallyCallable wrapper for each service method and
            keeps them in memory until bundle state is no longer ACTIVE. In addition to the MANIFEST.MF entry it has
            a configuration of fully qualified service names that are matched against the bundles registered services
            for which an APSExternallyCallable wrapper will be created.

            2) Registers an APSExternalProtocolExtenderService making the APSExternallyCallable objects handled available
            to be called. Note that APSExternallyCallable is an interface extending java.util.concurrent.Callable.
            This service is used by other bundles making the service available remotely trough some protocol like
            JSON for example.

            This extender is a middleman making access to services very easy to expose using whatever protocol you want.
            Multiple protocol bundles using the APSExternalProtocolExtenderService can be deployed at the same time making
            services available through more than one protocol.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-external-protocol-extender</artifactId>
    <packaging>bundle</packaging>

    <name>APS External Protocol Extender</name>

    <description>
        This does two things:

        1) Looks for "APS-Externalizable: true" MANIFEST.MF entry in deployed bundles and if found and bundle status is
           ACTIVE, analyzes the service API and creates an APSExternallyCallable wrapper for each service method and
           keeps them in memory until bundle state is no longer ACTIVE. In addition to the MANIFEST.MF entry it has
           a configuration of fully qualified service names that are matched against the bundles registered services
           for which an APSExternallyCallable wrapper will be created.

        2) Registers an APSExternalProtocolExtenderService making the APSExternallyCallable objects handled available
           to be called. Note that APSExternallyCallable is an interface extending java.util.concurrent.Callable.
           This service is used by other bundles making the service available remotely trough some protocol like
           JSON for example.

        This extender is a middleman making access to services very easy to expose using whatever protocol you want.
        Multiple protocol bundles using the APSExternalProtocolExtenderService can be deployed at the same time making
        services available through more than one protocol.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.externalprotocolextender.APSExternalProtocolExtenderActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.externalprotocolextender.pub.config
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.externalprotocolextender,
            se.natusoft.osgi.aps.externalprotocolextender.service,
            se.natusoft.osgi.aps.externalprotocolextender.model
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSExternalProtocolExtender/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS External Protocol HTTP Transport Provider

        Code Version
            1.0.0

        Description
            This uses aps-external-protocol-extender to provide remote calls over HTTP. It makes
            any published service implementing se.natusoft.osgi.aps.net.rpc.streamed.service.StreamedRPCProtocolService
            available for calling services over HTTP.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-ext-protocol-http-transport-provider</artifactId>
    <packaging>war</packaging>

    <name>APS External Protocol HTTP Transport Provider</name>

    <description>
        This uses aps-external-protocol-extender to provide remote calls over HTTP. It makes
        any published service implementing se.natusoft.osgi.aps.net.rpc.streamed.service.StreamedRPCProtocolService
        available for calling services over HTTP.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.rpchttpextender.Activator</osgi.bundle.activator>

        <!-- The context path of a war bundle (WAB). Setting this enables Web-ContextPath: in MANIFEST.MF. -->
        <osgi.web.context.path>apsrpc</osgi.web.context.path>

        <!-- The osgi Bundle-ClassPath manifest entry. -->
        <osgi.bundle.classpath>
            WEB-INF/classes,
            WEB-INF/lib/aps-web-tools-${project.version}.jar,
            WEB-INF/lib/commons-codec-20041127.091804.jar
        </osgi.bundle.classpath>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            se.natusoft.osgi.aps.api.auth.user;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.misc.session;version="${aps.import.ver}",
            *
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.rpchttpextender,
            se.natusoft.osgi.aps.rpchttpextender.config,
            se.natusoft.osgi.aps.rpchttpextender.servlet,
            se.natusoft.osgi.arpchttpextenderttp.servlet.errors
        </osgi.private.package>

        <!-- The packages to export from dependent & embedded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embedded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <aps.config.classes>se.natusoft.osgi.aps.rpchttpextender.config.RPCServletConfig</aps.config.classes>

        <!--
            This specifies the packagin type of the produced bundle to deploy. Should be either "jar" or "war",
            where "jar" is the default. To override this set this property in local pom.
        -->
        <server.deploy.artifact.type>war</server.deploy.artifact.type>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployWABBundleTile:${project.version}</tile.deploy>

        <!--
            Misc properties
        -->
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-admin-web-service-provider</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency><!-- TODO: This is a strange dependency! -->
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-json-service-provider</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Other
        -->

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>20041127.091804</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-web-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath>
                            <Web-ContextPath>${osgi.web.context.path}</Web-ContextPath>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSExtProtocolHTTPTransportProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Groups

        Code Version
            1.0.0

        Description
            Provides network groups where named groups can be joined as members and then send and
            receive data types to the group. This is based on multicast and provides a verified
            multicast delivery with acknowledgements of receive to the sender and resends if needed.
            The sender will get an exception if not all members receive all data. Member actuality
            is handled by members announcing themselves relatively often and will be removed when
            an announcement does not come in expected time. So if a member dies unexpectedly
            (network goes down, etc) its membership will resolve rather quickly. Members also
            tries to inform the group when they are doing a controlled exit. Most network aspects
            are configurable. Please note that this does not support streaming! That would require
            a far more complex protocol. It waits in all packets of a message before delivering
            the message.

            Note that even though this is an OSGi bundle, the jar produced can also be used as a
            library outside of OSGi. The se.natusoft.apsgroups.APSGroups API should then be used.
            This API has no external dependencies, only this jar is required for that use.

            When run with java -jar a for test command line shell will run where you can check
            members, send types and files.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-groups</artifactId>
    <packaging>bundle</packaging>

    <name>APS Groups</name>

    <description>
        Provides network groups where named groups can be joined as members and then send and
        receive data messages to the group. This is based on multicast and provides a verified
        multicast delivery with acknowledgements of receive to the sender and resends if needed.
        The sender will get an exception if not all members receive all data. Member actuality
        is handled by members announcing themselves relatively often and will be removed when
        an announcement does not come in expected time. So if a member dies unexpectedly
        (network goes down, etc) its membership will resolve rather quickly. Members also
        tries to inform the group when they are doing a controlled exit. Most network aspects
        are configurable. Please note that this does not support streaming! That would require
        a far more complex protocol. It waits in all packets of a message before delivering
        the message.

        Note that even though this is an OSGi bundle, the jar produced can also be used as a
        library outside of OSGi. The se.natusoft.apsgroups.APSGroups API should then be used.
        This API has no external dependencies, only this jar is required for that use.

        When run with java -jar a for test command line shell will run where you can check
        members, send messages and files.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.groups.APSGroupsActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.apsgroups,
            se.natusoft.apsgroups.codeclarity,
            se.natusoft.apsgroups.config,
            se.natusoft.apsgroups.internal,
            se.natusoft.apsgroups.internal.net,
            se.natusoft.apsgroups.internal.protocol,
            se.natusoft.apsgroups.internal.protocol.message,
            se.natusoft.apsgroups.internal.protocol.message.exception,
            se.natusoft.apsgroups.logging,
            se.natusoft.osgi.aps.groups,
            se.natusoft.osgi.aps.groups.config,
            se.natusoft.osgi.aps.groups.logging,
            se.natusoft.osgi.aps.groups.service
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
            APS properties.
        -->

        <!-- We register our configuration for auto registration and management. -->
        <aps.config.classes>se.natusoft.osgi.aps.groups.config.APSGroupsServiceConfig</aps.config.classes>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <Main-Class>se.natusoft.apsgroups.CmdLineTestShell</Main-Class>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSGroups/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Groups Sync Service Provider

        Code Version
            1.0.0

        Description
            This provides APSSyncService based on the APSGroupService.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        tommy ()
            Changes:
            2013-08-30: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-groups-sync-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Groups Sync Service Provider</name>

    <description>
        This provides APSSyncService based on the APSGroupService.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.sync
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--APS-Configs></APS-Configs-->
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSGroupsSyncServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Net Time Service Provider

        Code Version
            1.0.0

        Description
            Provides time translation between local time an network neutral time.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        tommy ()
            Changes:
            2013-08-31: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-net-time-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Net Time Service Provider</name>

    <description>
        Provides time translation between local time an network neutral time.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.time
        </osgi.private.package>

        <!-- The packages to export from dependent & embedded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embedded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--APS-Configs></APS-Configs-->
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSNetTimeServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS RabbitMQ Message Service Provider

        Code Version
            1.0.0

        Description
            Provides an implementation of APSMessageService using RabbitMQ Java Client.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        tommy ()
            Changes:
            2013-09-01: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-rabbitmq-message-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS RabbitMQ Message Service Provider</name>

    <description>
        Provides an implementation of APSMessageService using RabbitMQ Java Client.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.net.messaging,
            se.natusoft.osgi.aps.net.messaging.config,
            se.natusoft.osgi.aps.net.messaging.apis,
            se.natusoft.osgi.aps.net.messaging.rabbitmq,
            se.natusoft.osgi.aps.net.messaging.service
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=system</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            APS properties.
        -->

        <!-- We register our configuration for auto registration and management. -->
        <aps.config.classes>se.natusoft.osgi.aps.net.messaging.config.RabbitMQMessageServiceConfig</aps.config.classes>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            RabbitMQ client jars
        -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.2</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/commons-io-1.2.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.1</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/commons-cli-1.1.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>rabbitmq</groupId>
            <artifactId>rabbitmq-client</artifactId>
            <version>3.1.5</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/rabbitmq-client.jar</systemPath>
        </dependency>

        <!--
            Groovy
        -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.4.3</version>
            <scope>provided</scope>
            <classifier>indy</classifier>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSRabbitMQMessageServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Streamed JSONRPC Protocol Provider

        Code Version
            1.0.0

        Description
            Provides JSONRPC implementations for version 1.0 and 2.0.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-streamed-json-rpc-protocol-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS Streamed JSONRPC Protocol Provider</name>

    <description>
        Provides JSONRPC implementations for version 1.0 and 2.0.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.jsonrpc.APSStreamedJSONRPCServiceActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.jsonrpc;version="${project.version}",
            se.natusoft.osgi.aps.jsonrpc.errors;version="${project.version}",
            se.natusoft.osgi.aps.jsonrpc.model;version="${project.version}",
            se.natusoft.osgi.aps.jsonrpc.protocols;version="${project.version}"
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Misc properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployBundleTile:${project.version}</tile.deploy>

    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--suppress osmorcNonOsgiMavenDependency -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSStreamedJSONRPCProtocolProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            APS TCPIP Service Provider

        Code Version
            1.0.0

        Description
            Provides an implementation of APSTCPIPService. This service does not provide any security of its own,
            but makes use of APSTCPSecurityService, and APSUDPSecurityService when available and configured for
            security.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        tommy ()
            Changes:
            2015-04-11: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-tcpip-service-provider</artifactId>
    <packaging>bundle</packaging>

    <name>APS TCPIP Service Provider</name>

    <description>
        Provides an implementation of APSTCPIPService. This service does not provide any security of its own,
        but makes use of APSTCPSecurityService, and APSUDPSecurityService when available and configured for
        security.
    </description>

    <properties>
        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.tools.APSActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.tcpipsvc,
            se.natusoft.osgi.aps.tcpipsvc.config,
            se.natusoft.osgi.aps.tcpipsvc.meta,
            se.natusoft.osgi.aps.tcpipsvc.security
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=system</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            APS properties.
        -->

        <!-- We register our configuration for auto registration and management. -->
        <aps.config.classes>se.natusoft.osgi.aps.tcpipsvc.config.TCPIPConfig</aps.config.classes>

        <!--
             Trigger tiles.
         -->
        <!--tile.groovy>${project.groupId}:groovy-tile:${project.version}</tile.groovy-->

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Test

                NOTE: The tests run for this compile send and receive network traffic. One test listens
                      to TCP connections. This might cause problems if this is run in a CI server and
                      there are parallel builds building the same code. To avoid such problems, pass
                      -Daps.test.disabled=true to the build.
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-service-test-support</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-osgi-test-tools</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <!--
            aps-tcpip-service-provider dependencies
        -->

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.4.3</version>
            <scope>provided</scope>
            <classifier>indy</classifier>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Network/APSTCPIPServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Network

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>APS-Network</artifactId>
    <packaging>pom</packaging>

    <name>APS Network</name>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>APSExternalProtocolExtender</module>
        <module>APSExtProtocolHTTPTransportProvider</module>
        <module>APSStreamedJSONRPCProtocolProvider</module>
        <module>APSGroups</module>
        <module>APSNetTimeServiceProvider</module>
        <module>APSRabbitMQMessageServiceProvider</module>
        <module>APSTCPIPServiceProvider</module>
        <module>APSDefaultDiscoveryServiceProvider</module>
    </modules>

</project>
./APS-Network/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS-UserGuide

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-21: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <artifactId>APS-UserGuide</artifactId>

    <properties>
        <doc.title>Application Platform Services</doc.title>

        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/..</aps.root.dir>
    </properties>

    <build>
        <plugins>
            <!--
                Generate Documentation
            -->
            <plugin>
                <groupId>se.natusoft.tools.doc.markdowndoc</groupId>
                <artifactId>markdowndoc-maven-plugin</artifactId>
                <version>${markdownDoc.version}</version>

                <executions>
                    <execution>
                        <id>generate-pdf-doc</id>
                        <goals>
                            <goal>doc</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>

                            <generatorOptions>
                                <generator>pdf</generator>
                                <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                <parserOptions>markdownJavadoc=true</parserOptions>
                            </generatorOptions>

                            <pdfGeneratorOptions>
                                <resultFile>${project.basedir}/docs/${project.artifactId}.pdf</resultFile>
                                <pageSize>A4</pageSize>
                                <title>${doc.title}</title>
                                <subject>User Guide</subject>
                                <version>${project.version}</version>
                                <author>Tommy Svensson</author>
                                <copyright>Copyright © 2013 ${project.organization.name}</copyright>
                                <generateTitlePage>true</generateTitlePage>
                                <generateTOC>true</generateTOC>
                            </pdfGeneratorOptions>

                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-html-doc</id>
                        <goals>
                            <goal>doc</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>

                            <generatorOptions>
                                <generator>html</generator>
                                <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                <parserOptions>markdownJavadoc=true</parserOptions>
                            </generatorOptions>

                            <htmlGeneratorOptions>
                                <resultFile>${project.basedir}/docs/${project.artifactId}.html</resultFile>
                                <makeFileLinksRelativeTo>{project.basedir}/../..+../../</makeFileLinksRelativeTo>
                                <css>docs.css</css>
                            </htmlGeneratorOptions>

                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-markdown-doc</id>
                        <goals>
                            <goal>doc</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>

                            <generatorOptions>
                                <generator>md</generator>
                                <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                <parserOptions>markdownJavadoc=true</parserOptions>
                            </generatorOptions>

                            <mdGeneratorOptions>
                                <resultFile>${project.basedir}/docs/${project.artifactId}.md</resultFile>
                                <makeFileLinksRelativeTo>{project.basedir}/../..+../../</makeFileLinksRelativeTo>
                            </mdGeneratorOptions>

                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>se.natusoft.maven.plugin</groupId>
                <artifactId>ftp-maven-plugin</artifactId>
                <version>${ftpPlugin.version}</version>
                <executions>
                    <execution>
                        <id>upload</id>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <files>**/.*.png</files>
                            <targetHost>${download.upload}</targetHost>
                            <targetPort>21</targetPort>
                            <userName>${web.server.user}</userName>
                            <password>${web.server.pw}</password>
                            <targetPath>${download.base.path}/Images/APS</targetPath>
                            <baseDir>${basedir}/..</baseDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
./APS-UserGuide/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Administration Web

        Code Version
            1.0.0

        Description
            This is a web application providing and administration web frame.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Webs</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-admin-web</artifactId>
    <packaging>war</packaging>

    <name>APS Administration Web</name>

    <description>
        This is a web application providing and administration web frame.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
            Bundle properties
        -->

        <!-- The synbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator></osgi.bundle.activator>

        <!-- The context path of a war bundle (WAB). Setting this enables Web-ContextPath: in MANIFEST.MF. -->
        <osgi.web.context.path>apsadminweb</osgi.web.context.path>

        <!-- The osgi Bundle-ClassPath manifest entry. -->
        <osgi.bundle.classpath>
            .,
            WEB-INF/classes,
            WEB-INF/lib/atmosphere-compat-jbossweb-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-compat-tomcat-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-compat-tomcat7-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-runtime-1.0.18.vaadin3.jar,
            WEB-INF/lib/commons-cli-1.2.jar,
            WEB-INF/lib/commons-jexl-2.1.1.jar,
            WEB-INF/lib/commons-logging-1.1.1.jar,
            WEB-INF/lib/cssparser-0.9.5.jar,
            WEB-INF/lib/jsoup-1.6.3.jar,
            WEB-INF/lib/sac-1.3.jar,
            WEB-INF/lib/vaadin-client-compiled-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-push-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-server-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-shared-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-shared-deps-1.0.2.jar,
            WEB-INF/lib/vaadin-slf4j-jdk14-1.6.1.jar,
            WEB-INF/lib/vaadin-theme-compiler-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-themes-${vaadin.version}.jar,
            WEB-INF/lib/aps-vaadin-web-tools-${project.version}.jar,
            WEB-INF/lib/aps-web-tools-${project.version}.jar
        </osgi.bundle.classpath>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            javax.servlet,
            javax.servlet.http,
            javax.xml.namespace,
            org.w3c.dom,
            org.osgi.framework;version="[1.5,2)",
            org.osgi.service.log;version="[1.3,2)",
            org.osgi.util.tracker;version="[1.4,2)",
            se.natusoft.osgi.aps.tools;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.tracker;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.exceptions;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.annotation;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.annotation.activator;version="${aps.import.ver}",
            se.natusoft.osgi.aps.apsadminweb.service;version="${aps.import.ver}",
            se.natusoft.osgi.aps.apsadminweb.service.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.misc.session;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.exceptions;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.web.config;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.service;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.model;version="${aps.import.ver}"
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- Resources to include in bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle. -->
        <osgi.embed.directory>WEB-INF/lib</osgi.embed.directory>

        <!--
            This specifies the packaging type of the produced bundle to deploy. Should be either "jar" or "war",
            where "jar" is the default. To override this set this property in local pom.
        -->
        <server.deploy.artifact.type>war</server.deploy.artifact.type>

        <!--
            Deploy bundle.
        -->
        <deploy-bundle>true</deploy-bundle>

        <!--
            Other properties
        -->
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>


    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-vaadin-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-admin-web-service-provider</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Third party
        -->

        <!--
            Vaadin
        -->

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <!--
          Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).

          For widgetset compilation, vaadin-client-compiler is automatically added on the
          compilation classpath by vaadin-maven-plugin so normally there is no need for an
          explicit dependency.
        -->
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven.bundle.plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <APS-Configs>se.natusoft.osgi.aps.api.web.config.APSAdminConfig</APS-Configs>
                            <Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath>
                            <Web-ContextPath>${osgi.web.context.path}</Web-ContextPath>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Webs/APSAdminWeb/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Administration Web Registration Service

        Code Version
            1.0.0

        Description
            The service for registering admin webs with aps-admin-web.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
	    <artifactId>APS-Webs</artifactId>
    	<groupId>se.natusoft.osgi.aps</groupId>
    	<version>1.0.0</version>
        <relativePath>..</relativePath>
  </parent>

  <artifactId>aps-admin-web-service-provider</artifactId>
  <packaging>bundle</packaging>

  <name>APS Administration Web Registration Service</name>

  <description>The service for registering admin webs with aps-admin-web.</description>

    <properties>
        <!--
            Bundle properties
        -->
        <!-- The synbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.apsadminweb.APSAdminWebServiceActivator</osgi.bundle.activator>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.apsadminweb.service.model,
            se.natusoft.osgi.aps.apsadminweb.service
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>*</osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.apsadminweb,
            se.natusoft.osgi.aps.apsadminweb.service.provider
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
            Resources to include.
        -->
        <osgi.include.resource>

        </osgi.include.resource>

        <!--
            Deploy bundle.
        -->
        <deploy-bundle>true</deploy-bundle>

    </properties>

    <!--
        Dependencies
    -->
    <dependencies>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <!--Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath-->
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
./APS-Webs/APSAdminWebServiceProvider/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Configuration Admin Web

        Code Version
            1.0.0

        Description
            Edits configurations registered with the APSConfigurationService.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Webs</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-config-admin-web</artifactId>
    <packaging>war</packaging>

    <name>APS Configuration Admin Web</name>

    <description>Edits configurations registered with the APSConfigurationService.</description>

    <properties>

        <!--
            Bundle properties
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.apsconfigadminweb.APSConfigAdminWebActivator</osgi.bundle.activator>

        <aps.config.classes>se.natusoft.osgi.aps.apsconfigadminweb.config.CAWConfig</aps.config.classes>

        <!-- The context path of a war bundle (WAB). Setting this enables Web-ContextPath: in MANIFEST.MF. -->
        <osgi.web.context.path>apsadminweb/config</osgi.web.context.path>

        <!-- The osgi Bundle-ClassPath manifest entry. -->
        <osgi.bundle.classpath>
            .,
            WEB-INF/classes,
            WEB-INF/lib/atmosphere-compat-jbossweb-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-compat-tomcat-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-compat-tomcat7-1.0.18.vaadin3.jar,
            WEB-INF/lib/atmosphere-runtime-1.0.18.vaadin3.jar,
            WEB-INF/lib/commons-cli-1.2.jar,
            WEB-INF/lib/commons-jexl-2.1.1.jar,
            WEB-INF/lib/commons-logging-1.1.1.jar,
            WEB-INF/lib/cssparser-0.9.5.jar,
            WEB-INF/lib/jsoup-1.6.3.jar,
            WEB-INF/lib/sac-1.3.jar,
            WEB-INF/lib/vaadin-client-compiled-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-push-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-server-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-shared-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-shared-deps-1.0.2.jar,
            WEB-INF/lib/vaadin-slf4j-jdk14-1.6.1.jar,
            WEB-INF/lib/vaadin-theme-compiler-${vaadin.version}.jar,
            WEB-INF/lib/vaadin-themes-${vaadin.version}.jar,
            WEB-INF/lib/aps-web-tools-${project.version}.jar,
            WEB-INF/lib/aps-vaadin-web-tools-${project.version}.jar
        </osgi.bundle.classpath>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
            se.natusoft.osgi.aps.apsconfigadminweb.config
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            javax.servlet,
            javax.servlet.http,
            javax.xml.namespace,
            org.w3c.dom,
            org.osgi.framework;version="[1.5,2)",
            org.osgi.service.log;version="[1.3,2)",
            org.osgi.util.tracker;version="[1.4,2)",
            se.natusoft.osgi.aps.api.core.configold;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.annotation;version="${aps.import.ver}",
            se.natusoft.osgi.aps.exceptions;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.tracker;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.models;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.exceptions;version="${aps.import.ver}",
            se.natusoft.osgi.aps.apsadminweb.service;version="${aps.import.ver}",
            se.natusoft.osgi.aps.apsadminweb.service.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.service;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.model.admin;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.util;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.misc.session;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.web.config;version="${aps.import.ver}"
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
        <!--
            By default, any package not exported are private. This is a convenience specification. Among the export, import and
            private package specifications the only you most likely don't want to specify is the import packages since those are
            usually quite a lot of work to resolve. Therefore you can specify export and private packages and then specify "*"
            for import packages and have the plugin resolve all import packages automatically by excluding export and private.

            In this specific case however we are actually manually specifying our import package list, which in this case is
            quite simple and thereby we don't need to specify any private packages. The reason for having a quite small import
            package list here is due to that we have most of our dependencies embedded locally in the WAR/VAB. The reason for
            that is that even though the Vaadin jar is an OSGi bundle we cannot deploy it separately as its own bundle since
            we are a web application managed by a web.xml, where the web container creates the Vaadin servlet and passes the
            init urlParams to it, which includes the fully qualified class name of APSConfigAdminWebApp. Now the Vaadin servlet
            tries to load and instantiate this class and for that to succeed the class has to be available in the classpath
            of the vaadin servlet. If the Vaadin servlet was deployed as an OSGi bundle then it has its own class loader
            which import nothing from this bundle since it doesn't know anything about this bundle, thereby making it
            impossible for the Vaadin servlet to se our Vaadin application class. When we however embed Vaadin locally
            in our bundle both Vaadin and our Vaadin application are loaded with the same class loader.

        -->
        </osgi.private.package>

        <!-- Resources to include in bundle. -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle. -->
        <osgi.embed.directory>WEB-INF/lib</osgi.embed.directory>

        <!--
            This specifies the package-ing type of the produced bundle to deploy. Should be either "jar" or "war",
            where "jar" is the default. To override this set this property in local pom.
        -->
        <server.deploy.artifact.type>war</server.deploy.artifact.type>

        <!--
            Misc properties
        -->
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
            Deploy bundle.
        -->
        <deploy-bundle>true</deploy-bundle>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-vaadin-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-admin-web-service-provider</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>

        <!--
            Vaadin
        -->

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <!--
          Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).

          For widgetset compilation, vaadin-client-compiler is automatically added on the
          compilation classpath by vaadin-maven-plugin so normally there is no need for an
          explicit dependency.
        -->
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>deploy-web-bundle-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven.bundle.plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath>
                            <Web-ContextPath>${osgi.web.context.path}</Web-ContextPath>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Webs/APSConfigAdminWeb/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS User Admin Web

        Code Version
            1.0.0

        Description
            This is an administration web for aps-simple-user-service that allows editing of roles and users.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Webs</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-user-admin-web</artifactId>
    <packaging>war</packaging>

    <name>APS User Admin Web</name>

    <description>
        This is an administration web for aps-simple-user-service that allows editing of roles and users.
    </description>

    <properties>

        <!--
            Bundle properties
        -->

        <!-- The synbolic name of the bundle. Defaults to the artifact id, but can be overriden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.apsuseradminweb.APSUserAdminActivator</osgi.bundle.activator>

        <!-- The context path of a war bundle (WAB). Setting this enables Web-ContextPath: in MANIFEST.MF. -->
        <osgi.web.context.path>apsadminweb/user</osgi.web.context.path>

        <!-- The osgi Bundle-ClassPath manifest entry. -->
        <osgi.bundle.classpath>
.,
WEB-INF/classes,
WEB-INF/lib/atmosphere-compat-jbossweb-1.0.18.vaadin3.jar,
WEB-INF/lib/atmosphere-compat-tomcat-1.0.18.vaadin3.jar,
WEB-INF/lib/atmosphere-compat-tomcat7-1.0.18.vaadin3.jar,
WEB-INF/lib/atmosphere-runtime-1.0.18.vaadin3.jar,
WEB-INF/lib/commons-cli-1.2.jar,
WEB-INF/lib/commons-jexl-2.1.1.jar,
WEB-INF/lib/commons-logging-1.1.1.jar,
WEB-INF/lib/cssparser-0.9.5.jar,
WEB-INF/lib/jsoup-1.6.3.jar,
WEB-INF/lib/sac-1.3.jar,
WEB-INF/lib/vaadin-client-compiled-${vaadin.version}.jar,
WEB-INF/lib/vaadin-push-${vaadin.version}.jar,
WEB-INF/lib/vaadin-server-${vaadin.version}.jar,
WEB-INF/lib/vaadin-shared-${vaadin.version}.jar,
WEB-INF/lib/vaadin-shared-deps-1.0.2.jar,
WEB-INF/lib/vaadin-slf4j-jdk14-1.6.1.jar,
WEB-INF/lib/vaadin-theme-compiler-${vaadin.version}.jar,
WEB-INF/lib/vaadin-themes-${vaadin.version}.jar,
WEB-INF/lib/aps-web-tools-${project.version}.jar,
WEB-INF/lib/aps-vaadin-web-tools-${project.version}.jar
        </osgi.bundle.classpath>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            javax.servlet,
            javax.servlet.http,
            javax.xml.namespace,
            org.w3c.dom,
            org.osgi.framework;version="[1.5,2)",
            se.natusoft.osgi.aps.tools;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.tracker;version="${aps.import.ver}",
            se.natusoft.osgi.aps.tools.models;version="${aps.import.ver}",
            se.natusoft.osgi.aps.apsadminweb.service;version="${aps.import.ver}",
            se.natusoft.osgi.aps.apsadminweb.service.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.exceptions;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.misc.session;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.web.config;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.service;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.core.configold.model;version="${aps.import.ver}"
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
        </osgi.private.package>

        <!-- The packages to export from dependent & embeded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embeded into the bundle. -->
        <osgi.embed.directory>WEB-INF/lib</osgi.embed.directory>

        <!--
            This specifies the package-ing type of the produced bundle to deploy. Should be either "jar" or "war",
            where "jar" is the default. To override this set this property in local pom.
        -->
        <server.deploy.artifact.type>war</server.deploy.artifact.type>

        <!--
            Misc properties
        -->
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployWABBundleTile:${project.version}</tile.deploy>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-vaadin-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-admin-web-service-provider</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>

        <!--
            Vaadin
        -->

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <!--
          Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).

          For widgetset compilation, vaadin-client-compiler is automatically added on the
          compilation classpath by vaadin-maven-plugin so normally there is no need for an
          explicit dependency.
        -->
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath>
                            <Web-ContextPath>${osgi.web.context.path}</Web-ContextPath>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
./APS-Webs/APSUserAdminWeb/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            APS Web Applications

        Code Version
            1.0.0

        Description
            APS Web Applications

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>APS-Webs</artifactId>
    <packaging>pom</packaging>

    <name>APS Web Applications</name>

    <description>
        APS Web Applications
    </description>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <!--
        Modules
    -->
    <modules>
        <module>APSAdminWebServiceProvider</module>
        <module>APSAdminWeb</module>
        <module>APSConfigAdminWeb</module>
        <module>APSUserAdminWeb</module>
    </modules>

    <dependencies>
    </dependencies>


</project>
./APS-Webs/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            DeployBundleTile

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-04: Created!

    This tile deploys a jar bundle to the ${server.deploy.dir} defines in settings.xml.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>Build</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>deploy-bundle-mixin</artifactId>
    <packaging>pom</packaging>

    <build>

        <plugins>
            <plugin>
                <groupId>se.natusoft.osgi.aps</groupId>
                <artifactId>ServerDeployPlugin</artifactId>
                <version>${project.version}</version>
                <executions>
                    <execution>
                        <id>server-deploy</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <sourceFile>${project.build.directory}/${project.build.finalName}.jar</sourceFile>
                            <destFile>${aps.root.dir}/vagrant/deploy/${project.build.finalName}.jar</destFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
./Build/DeployBundleMixIn/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            DeployWABBundleTile

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-04: Created!

    This tile deploys a WAB (.war) bundle to the ${server.deploy.dir} defines in settings.xml.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>Build</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>deploy-web-bundle-mixin</artifactId>
    <packaging>pom</packaging>

    <build>

        <plugins>
            <plugin>
                <groupId>se.natusoft.osgi.aps</groupId>
                <artifactId>ServerDeployPlugin</artifactId>
                <version>${project.version}</version>
                <executions>
                    <execution>
                        <id>server-deploy</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <sourceFile>${project.build.directory}/${project.build.finalName}.war</sourceFile>
                            <destFile>${aps.root.dir}/vagrant/deploy/${project.build.finalName}.war</destFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
./Build/DeployWABBundleMixIn/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            Documentation MixIn

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-01-31: Created!
    ___________________________________________________________________________________________________________

    This mixin generates PDF and HTML documents from markdown using MarkdownDoc.
    As input it expects the following file (relative to project):

        docs/**/.*.fs

    where ** = any subdirectory and .* =  any filename. There has to be at least one for any documentation
    to be generated.

    The .fs file should contain a list of files to supply for input and should be any type of files
    supported by MarkdownDoc (like .md and .java (extracts javadoc)).

    The file list in the .fs should be comma separated and can contain /**/ to indicate any subdirectories and
    regular expression in file name.

    All matching files will be passed to MarkdownDoc and both PDF and HTML files will be generated. There will
    be only one document of each containing the information in all inputs. The generated document will be put
    in the docs directory and be called ${project.artifactId}.pdf and ${project.artifactId}.html.

    To trigger this tile you need the following property:

        <tile.doc>${project.groupId}:DocTile:${project.version}</tile.doc>

    in the pom.

    Also note that the profile "gen-docs" must be active to generate any docs.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>Build</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>documentation-mixin</artifactId>

    <name>Documentation MixIn</name>

    <properties>
        <markdownDoc.version>1.4</markdownDoc.version>
    </properties>

    <build>
        <plugins>
            <!--
                Generate Documentation
            -->
            <plugin>
                <groupId>se.natusoft.tools.doc.markdowndoc</groupId>
                <artifactId>markdowndoc-maven-plugin</artifactId>
                <version>${markdownDoc.version}</version>

                <dependencies>
                    <dependency>
                        <groupId>se.natusoft.tools.doc.markdowndoc</groupId>
                        <artifactId>markdown-doc-lib</artifactId>
                        <version>${markdownDoc.version}</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>generate-pdf-doc</id>
                        <goals>
                            <goal>doc</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>

                            <generatorOptions>
                                <generator>pdf</generator>
                                <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                <parserOptions>markdownJavadoc=true</parserOptions>
                            </generatorOptions>

                            <pdfGeneratorOptions>
                                <resultFile>${project.basedir}/docs/${project.artifactId}.pdf</resultFile>
                                <pageSize>A4</pageSize>
                                <title>${project.name}</title>
                                <subject>User Guide</subject>
                                <version>${project.version}</version>
                                <author>Tommy Svensson</author>
                                <copyright>Copyright © ${project.inceptionYear} ${project.organization.name}</copyright>
                                <generateTitlePage>true</generateTitlePage>
                                <generateTOC>true</generateTOC>
                            </pdfGeneratorOptions>

                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-html-doc</id>
                        <goals>
                            <goal>doc</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>

                            <generatorOptions>
                                <generator>html</generator>
                                <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                <parserOptions>markdownJavadoc=true</parserOptions>
                            </generatorOptions>

                            <htmlGeneratorOptions>
                                <resultFile>${project.basedir}/docs/${project.artifactId}.html</resultFile>
                                <makeFileLinksRelativeTo>${project.basedir}/docs/src+images/</makeFileLinksRelativeTo>
                                <css>docs.css</css>
                            </htmlGeneratorOptions>

                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-markdown-doc</id>
                        <goals>
                            <goal>doc</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>

                            <generatorOptions>
                                <generator>md</generator>
                                <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                <parserOptions>markdownJavadoc=true</parserOptions>
                            </generatorOptions>

                            <mdGeneratorOptions>
                                <resultFile>${project.basedir}/docs/${project.artifactId}.md</resultFile>
                                <makeFileLinksRelativeTo>${project.basedir}/docs/src+images/</makeFileLinksRelativeTo>
                            </mdGeneratorOptions>

                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
./Build/DocumentationMixIn/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            groovy-mixin

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2014-10-27: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>Build</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>groovy-mixin</artifactId>
    <packaging>pom</packaging>

    <properties>
        <groovy.version>2.4.5</groovy.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <sourceDirectory>src/main/groovy</sourceDirectory>
        <testSourceDirectory>src/test/groovy</testSourceDirectory>

        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <version>${groovy.version}</version>
                        <scope>compile</scope>
                        <classifier>indy</classifier>
                    </dependency>
                </dependencies>

                <executions>

                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
                                    <classpath refid="maven.compile.classpath"/>
                                </taskdef>
                                <mkdir dir="${project.build.outputDirectory}"/>
                                <groovyc srcdir="${basedir}/src/main/groovy" destdir="${project.build.outputDirectory}"
                                         encoding="${project.build.sourceEncoding}">
                                    <classpath refid="maven.compile.classpath"/>
                                </groovyc>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <configuration>
                            <target>
                                <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <mkdir dir="${project.build.testOutputDirectory}"/>
                                <groovyc srcdir="${basedir}/src/test/groovy" destdir="${project.build.testOutputDirectory}"
                                         encoding="${project.build.sourceEncoding}">
                                    <classpath refid="maven.test.classpath"/>
                                </groovyc>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>groovydoc</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <taskdef name="groovydoc"
                                         classname="org.codehaus.groovy.ant.Groovydoc"
                                         classpathref="maven.compile.classpath"
                                        />
                                <groovydoc destdir="${project.reporting.outputDirectory}/groovydoc"
                                           sourcepath="${basedir}/src/main/groovy" use="true"
                                           windowtitle="${project.name}"
                                           doctitle="${project.name}"
                                        >
                                    <link packages="java.,org.xml.,javax.,org.xml."
                                          href="http://download.oracle.com/javase/6/docs/api"/>
                                    <link packages="org.apache.tools.ant."
                                          href="http://evgeny-goldin.org/javadoc/ant/api"/>
                                    <link packages="groovy.,org.codehaus.groovy."
                                          href="http://groovy.codehaus.org/api/"/>
                                    <link packages="org.codehaus.gmaven."
                                          href="http://evgeny-goldin.org/javadoc/gmaven"/>
                                </groovydoc>
                            </target>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
        </plugins>

    </build>

</project>
./Build/GroovyMixIn/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            Build

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>Build</artifactId>

    <packaging>pom</packaging>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>DeployBundleMixIn</module>
        <module>DeployWABBundleMixIn</module>
        <module>ServerDeployPlugin</module>
        <module>GroovyMixIn</module>
        <module>DocumentationMixIn</module>
    </modules>


</project>
./Build/pom.xml
<!--

    PROJECT
        Name
            ServerDeployPlugin

        Code Version
            1.0.0

        Description
            Basically copies one file from one place to another. This is however used
            to deploy build artifacts from target to server pickup directory.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-05: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>Build</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>ServerDeployPlugin</artifactId>
    <packaging>maven-plugin</packaging>

    <name>ServerDeployPlugin</name>

    <description>
        Basically copies one file from one place to another. This is however used
        to deploy build artifacts from target to server pickup directory.
    </description>

    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-plugin-api</artifactId>
            <version>3.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-project</artifactId>
            <version>3.0-alpha-2</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
./Build/ServerDeployPlugin/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            OSGi Application Platform Services

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<!--suppress CheckValidXmlInScriptTagBody -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>se.natusoft.osgi.aps</groupId>
    <artifactId>APS</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>

    <name>OSGi Application Platform Services</name>

    <url>https://github.com/tombensve/APS</url>

    <!--
        Common properties
    -->
    <properties>
        <!--
            The version of this project. Run the set-version profile to update all poms with this version.
        -->
        <projectVersion>1.0.0</projectVersion>

        <!--
            This is the import package version specification for APS packages.
        -->
        <aps.import.ver>[0,2)</aps.import.ver>

        <!--
            This specifies the packaging type of the produced bundle to deploy. Should be either "jar" or "war",
            where "jar" is the default. To override this set this property in local pom.
        -->
        <server.deploy.artifact.type>jar</server.deploy.artifact.type>

        <!--
            This has to be overridden by modules to "${basedir}/.." or what is appropriate for the
            sub-level of the module.
        -->
        <aps.root.dir>${basedir}</aps.root.dir>

        <!--
            Dependency versions
        -->
        <maven.bundle.plugin.version>2.3.6</maven.bundle.plugin.version>
        <vaadin.version>7.1.14</vaadin.version>
        <osgi.version>4.2.0</osgi.version>
        <mixin.plugin.version>0.1-alpha-34</mixin.plugin.version>
        <clm.version>2.1.6</clm.version>
        <ftpPlugin.version>1.0.1</ftpPlugin.version>
        <markdownDoc.version>1.4.2</markdownDoc.version>
        <groovyVersion>2.4.4</groovyVersion>
    </properties>

    <!--
        Project Information
    -->
    <description>
        APS (Application Platform Services) - A smörgåsbord of OSGi application/platform type services.
    </description>

    <organization>
        <name>Natusoft AB</name>
        <url>http://www.natusoft.se/</url>
    </organization>
    <inceptionYear>2012</inceptionYear>
    <licenses>
        <license>
            <name>Apache 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Tommy Svensson</name>
            <email>tommy@natusoft.se</email>
        </developer>
    </developers>
    <scm>
        <connection>https://github.com/tombensve/APS.git</connection>
        <url/>
    </scm>
    <issueManagement>
        <system>github</system>
        <url>https://github.com/tombensve/APS/issues</url>
    </issueManagement>

    <dependencies>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <version>${osgi.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--suppress NonOsgiMavenDependency -->
        <dependency>
            <!--
                This is available in http://dl.bintray.com/tommy/maven which is setup by the
                <repository> tag below.
            -->
            <groupId>se.natusoft.annotation</groupId>
            <artifactId>docutations</artifactId>
            <version>1.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>APS-APIs</module>
        <module>APS-Core</module>
        <module>APS-Webs</module>
        <module>APS-Misc</module>
        <module>APS-Libraries</module>
        <module>APS-Network</module>
        <module>APS-Data</module>
        <module>APS-Auth</module>
        <module>Build</module>
        <module>APS-UserGuide</module>
        <module>APS-Archetypes</module>
        <module>Test</module>
        <!--<module>Test</module>-->
    </modules>

    <!--
    <distributionManagement>
        <repository>
            <id>maven-repository-upload</id>
            <url>ftp://${maven.repo.upload}/${maven.base.path}</url>
        </repository>
    </distributionManagement>
    -->

    <!--
        This makes my bintray repository available for dependencies not in jcenter.
    -->
    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>bintray-tommy-maven</id>
            <name>bintray</name>
            <url>http://dl.bintray.com/tommy/maven</url>
        </repository>
    </repositories>

    <build>
        <extensions>
            <!-- Enabling the use of FTP -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>2.3</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.odavid.maven.plugins</groupId>
                    <artifactId>mixin-maven-plugin</artifactId>
                    <version>${mixin.plugin.version}</version>
                    <extensions>true</extensions>
                </plugin>

                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>${maven.bundle.plugin.version}</version>
                    <extensions>true</extensions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
            </plugins>

        </pluginManagement>

        <plugins>

            <!--
                Setup for java 8.
            -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--
                Define project assemblies.
            -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.1</version>
                <configuration>
                    <descriptors>
                        <descriptor>file:${basedir}/src/assembly/bin-dist.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>

            <!--
                Force checksums when installing to repository.

                I suspect that this might be unneccesarry since I think
                deploy creates checksums anyhow when deploying to external
                repository.
            -->
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <createChecksum>true</createChecksum>
                </configuration>
            </plugin>

            <!--
                Copy relevant license files to target on install.
            -->
            <plugin>
                <groupId>se.natusoft.tools.codelicmgr</groupId>
                <artifactId>CodeLicenseManager-maven-plugin</artifactId>
                <version>${clm.version}</version>

                <dependencies>
                    <dependency>
                        <groupId>se.natusoft.tools.codelicmgr</groupId>
                        <artifactId>CodeLicenseManager-licenses-common-opensource</artifactId>
                        <version>${clm.version}</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>install-licence-info</id>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>

                            <installOptions>
                                <verbose>true</verbose>
                                <licenseDir>target/license</licenseDir>
                                <thirdpartyLicenseDir>target/license/thirdparty</thirdpartyLicenseDir>
                            </installOptions>

                            <!--
                                Here we add those that are not auto resolved.
                            -->
                            <thirdpartyLicenses>
                                <license>
                                    <type>OSGi</type>
                                    <version>2.0</version>
                                    <licenseProducts>
                                        <product>
                                            <name>org.osgi.compendium-4.2.0</name>
                                            <web>http://www.osgi.org/</web>
                                        </product>
                                        <product>
                                            <name>org.osgi.core-4.2.0</name>
                                            <web>http://www.osgi.org/</web>
                                        </product>
                                    </licenseProducts>
                                </license>
                                <!--
                                    This one is not available in a maven repository so it is included
                                    under /lib. It is only used when building.
                                -->
                                <license>
                                    <type>GPL</type>
                                    <version>v2</version>
                                    <licenseProducts>
                                        <product>
                                            <name>MarkdownDoclet-3.0</name>
                                            <web>http://code.google.com/p/markdown-doclet/</web>
                                        </product>
                                    </licenseProducts>
                                </license>
                            </thirdpartyLicenses>

                            <createLicensesMarkdown>true</createLicensesMarkdown>
                            <markdownTargetSubdir>lics</markdownTargetSubdir>
                            <markdownLinkPrefix>https://github.com/tombensve/APS/blob/master/lics/</markdownLinkPrefix>

                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

    <!--
        Profiles
    -->
    <profiles>

        <!--
            This generates documentation.
        -->
        <profile>
            <id>generate-docs</id>
            <activation>
                <file>
                    <exists>docs/filesets</exists>
                </file>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>se.natusoft.tools.doc.markdowndoc</groupId>
                        <artifactId>markdowndoc-maven-plugin</artifactId>
                        <version>${markdownDoc.version}</version>

                        <executions>
                            <execution>
                                <id>generate-pdf-doc</id>
                                <goals>
                                    <goal>doc</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>

                                    <generatorOptions>
                                        <generator>pdf</generator>
                                        <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                        <parserOptions>markdownJavadoc=true</parserOptions>
                                    </generatorOptions>

                                    <pdfGeneratorOptions>
                                        <resultFile>${project.basedir}/docs/${project.artifactId}.pdf</resultFile>
                                        <pageSize>A4</pageSize>
                                        <title>${project.name}</title>
                                        <subject>User Guide</subject>
                                        <version>${project.version}</version>
                                        <author>Tommy Svensson</author>
                                        <copyright>Copyright © ${project.inceptionYear} ${project.organization.name}</copyright>
                                        <generateTitlePage>true</generateTitlePage>
                                        <generateTOC>true</generateTOC>
                                    </pdfGeneratorOptions>

                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-html-doc</id>
                                <goals>
                                    <goal>doc</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>

                                    <generatorOptions>
                                        <generator>html</generator>
                                        <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                        <parserOptions>markdownJavadoc=true</parserOptions>
                                    </generatorOptions>

                                    <htmlGeneratorOptions>
                                        <resultFile>${project.basedir}/docs/${project.artifactId}.html</resultFile>
                                        <makeFileLinksRelativeTo>${project.basedir}/docs/src+images/</makeFileLinksRelativeTo>
                                        <css>docs.css</css>
                                    </htmlGeneratorOptions>

                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-markdown-doc</id>
                                <goals>
                                    <goal>doc</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>

                                    <generatorOptions>
                                        <generator>md</generator>
                                        <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                        <parserOptions>markdownJavadoc=true</parserOptions>
                                    </generatorOptions>

                                    <mdGeneratorOptions>
                                        <resultFile>${project.basedir}/docs/${project.artifactId}.md</resultFile>
                                        <makeFileLinksRelativeTo>${project.basedir}/docs/src+images/</makeFileLinksRelativeTo>
                                    </mdGeneratorOptions>

                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>

            <!--
                This does not work for some reason, while all other mixins works fine!
                I completely fail to see what the problem is, and I get no errors!

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.odavid.maven.plugins</groupId>
                        <artifactId>mixin-maven-plugin</artifactId>
                        <configuration>
                            <mixins>
                                <mixin>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>documentation-mixin</artifactId>
                                    <version>${project.version}</version>
                                </mixin>
                            </mixins>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            -->

        </profile>

        <profile>
            <id>apply-license-info</id>
            <build>
                <plugins>
                    <plugin>

                        <groupId>se.natusoft.tools.codelicmgr</groupId>
                        <artifactId>CodeLicenseManager-maven-plugin</artifactId>
                        <version>${clm.version}</version>

                        <dependencies>
                            <dependency>
                                <groupId>se.natusoft.tools.codelicmgr</groupId>
                                <artifactId>CodeLicenseManager-licenses-common-opensource</artifactId>
                                <version>${clm.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>se.natusoft.tools.codelicmgr</groupId>
                                <artifactId>CodeLicenseManager-source-updater-slashstar-comment</artifactId>
                                <version>${clm.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>se.natusoft.tools.codelicmgr</groupId>
                                <artifactId>CodeLicenseManager-source-updater-html-xml</artifactId>
                                <version>${clm.version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <project>
                                <codeVersion>${project.version}</codeVersion>
                                <name>${project.name}</name>
                                <description>${project.description}</description>
                            </project>
                            <!-- All options are optional. -->
                            <codeOptions>
                                <verbose>true</verbose>
                                <!-- If not set uses extension on source file to resolve. -->
                                <codeLanguage><!-- by source extension. -->
                                </codeLanguage>
                                <!-- If true updates the license information in source code. -->
                                <updateLicenseInfo>true</updateLicenseInfo>
                                <!-- If true updates the copyright information in source code. -->
                                <updateCopyright>true</updateCopyright>
                                <!-- If true updates the project information in source code. -->
                                <updateProject>true</updateProject>
                                <!-- If true will add authors information to source files that does not have it. This is not always implemented! -->
                                <addAuthorsBlock>true</addAuthorsBlock>
                                <!-- The directories to scan for source code to update with project & license information. -->
                                <sourceCodeDirs>
                                    src/main/java/**/.*.java,
                                    src/test/java/**/.*.java,
                                    src/main/groovy/**/.*.groovy,
                                    src/test/groovy/**/.*.groovy
                                    src/main/resources/**/.*.properties,
                                    src/main/resources/**/.*.xml,
                                    src/main/resources/**/.*.png,
                                    src/main/resources/**/.*.jpg,
                                    src/main/resources/**/.*.gif,
                                    src/assembly/**/.*.xml,
                                    src/main/webapp/**/.*.[cx][sm][sl],
                                    pom.xml
                                </sourceCodeDirs>

                            </codeOptions>

                            <userData>
                                <!--name></name>
                                <value></value-->
                            </userData>

                        </configuration>

                        <executions>
                            <execution>
                                <id>apply-licence-info</id>
                                <goals>
                                    <goal>apply</goal>
                                </goals>
                                <phase>generate-sources</phase>
                            </execution>
                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            This changes the version of this pom and all module poms, including parent.
            ${projectVersion} must be defined in properties above! So to update version,
            set it above and run this profile.
        -->
        <profile>
            <id>set-version</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>se.natusoft.tools.fileeditor</groupId>
                        <artifactId>file-editor-maven-support-plugin</artifactId>
                        <version>1.1</version>

                        <dependencies>
                            <dependency>
                                <groupId>se.natusoft.tools.fileeditor</groupId>
                                <artifactId>file-editor-maven-support-scripts</artifactId>
                                <version>1.1</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>update-version</id>
                                <goals>
                                    <goal>edit</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <scripts>
                                        <script>
                                            <code>
                                                <![CDATA[
                                                editor.moveToTopOfFile();
                                                // This will be either the parent version or the version of the root pom.
                                                if (editor.findFromCurrent("<version>")) {
                                                    editor.replaceCurrentLineBetween("<version>", "</version>", pomVersion);
                                                }
                                            ]]>
                                            </code>
                                            <sourcePath>${basedir}/pom.xml</sourcePath>
                                            <variables>
                                                <variable>
                                                    <name>pomVersion</name>
                                                    <value>${projectVersion}</value>
                                                </variable>
                                            </variables>
                                        </script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>intellij-javadoc-fix</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9</version>
                        <configuration>
                            <javadocExecutable>${java.home}/../bin/javadoc</javadocExecutable>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
./pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            APSOSGiTestTools

        Code Version
            1.0.0

        Description
            Provides tools for testing OSGi services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        tommy ()
            Changes:
            2015-01-23: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>Test</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-osgi-test-tools</artifactId>
    <packaging>jar</packaging>

    <name>APSOSGiTestTools</name>

    <description>
        Provides tools for testing OSGi services.
    </description>

    <properties>
        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
    </dependencies>

</project>
./Test/APSOSGiTestTools/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            APS Service Test Support

        Code Version
            1.0.0

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        tommy ()
            Changes:
            2015-01-18: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>Test</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-service-test-support</artifactId>
    <packaging>jar</packaging>

    <name>APS Service Test Support</name>

    <description>
    </description>

    <properties>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

</project>
./Test/APSServiceTestSupport/pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            Test

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        tommy ()
            Changes:
            2015-01-23: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>Test</artifactId>
    <packaging>pom</packaging>

    <properties>
        <!--
            Override of aps root dir. Note: this is for submodules!
        -->
        <aps.root.dir>${basedir}/../..</aps.root.dir>
    </properties>

    <modules>
        <module>APSServiceTestSupport</module>
        <module>APSOSGiTestTools</module>
    </modules>

</project>
./Test/pom.xml
