<?xml version="1.0" encoding="UTF-8"?>
<!--

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS</artifactId>
        <groupId>se.natusoft.aps</groupId>
        <version>${project.version}</version>
    </parent>

    <artifactId>${artifactId}</artifactId>
    <packaging>jar</packaging>

    <name>${artifactId}</name>

    <description>
    </description>

    <properties>

        <!--
            APS properties.
        -->

        <!-- We register our configuration for auto registration and management. -->
        <aps.config.id></aps.config.id>

        <!-- This defines the configuration JSON file. -->
        <aps.config.schema>/apsconfig/config-schema.json</aps.config.schema>

        <!-- This provides a configuraton with default values for first time. -->
        <aps.config.default.resource>/apsconfig/default-config.json</aps.config.default.resource>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <aps.clustered.vertx.for.tests>true</aps.clustered.vertx.for.tests>

        <!--
            Other properties
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--
            ${artifactId} dependencies
        -->


        <!--
            Test
        -->

        <!--
            These are for being able to run aps-config-manager and dependent bundles in unit tests
            using aps-runtime. Uncomment if needed or delete otherwise.
        -->
        <!-- REMOVE THESE IF YOU ARE NOT USING aps-config-manager TO MANAGE CONFIGURATION!
        <dependency>
            <groupId>se.natusoft.aps</groupId>
            <artifactId>aps-vertx-provider</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.aps</groupId>
            <artifactId>aps-vertx-cluster-datastore-service-provider</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.aps</groupId>
            <artifactId>aps-filesystem-service-provider</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.aps</groupId>
            <artifactId>aps-config-manager</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.aps</groupId>
            <artifactId>aps-core-lib</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.aps</groupId>
            <artifactId>aps-json-lib</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-common</artifactId>
            <version>${vertx.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <version>${vertx.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-hazelcast</artifactId>
            <version>${vertx.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>${hazelcast.version}</version>
            <scope>test</scope>
        </dependency>
        -->

    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <!-- Remove comment if you are writing groovy code, and create a src/main/groovy.
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        -->

                    </mixins>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
