<?xml version="1.0" encoding="UTF-8"?>
<!--
    PROJECT
        Name
            APS VertX Provider

        Code Version
            1.0.0

        Description
            This service provides configured Vertx instances allowing multiple services to use the same Vertx instance.

            This service also provides for multiple instances of VertX by associating an instance with a name. Everyone
            asking for the same name will get the same instance.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        tommy ()
            Changes:
            2017-01-01: Created!

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>1.0.0</version>
    </parent>

    <artifactId>aps-vertx-provider</artifactId>
    <packaging>jar</packaging>

    <name>APS VertX Provider</name>

    <description>
        This service provides configured Vertx instances allowing multiple services to use the same Vertx instance.

        This service also provides for multiple instances of VertX by associating an instance with a name. Everyone
        asking for the same name will get the same instance.
    </description>

    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <aps.clustered.vertx.for.tests>true</aps.clustered.vertx.for.tests>

    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-core-lib</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Unfortunately needed since IDEA can't see the mixin and keep removing groovy if added manually in IDEA. -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <scope>provided</scope>
            <version>${groovy.version}</version>
        </dependency>

        <!--
            APSVertXProvider dependencies
        -->

        <!-- This dependency is exported by this bundle! -->
        <!--suppress NonOsgiMavenDependency -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-groovy</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
            <!-- This pulls in an older version of groovy causing problems when running tests. -->
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
        From: https://github.com/vert-x3/vertx-examples/blob/master/osgi-examples/README.adoc

        [13] - io.vertx.core - 3.3.3
        [14] - io.vertx.common - 4.1.1.Final
        [15] - io.vertx.buffer - 4.1.1.Final
        [16] - io.vertx.transport - 4.1.1.Final
        [17] - io.vertx.handler - 4.1.1.Final
        [18] - io.vertx.codec - 4.1.1.Final
        [19] - io.vertx.handler-proxy - 4.1.1.Final
        [20] - io.vertx.codec-socks - 4.1.1.Final
        [21] - io.vertx.codec-http - 4.1.1.Final
        [22] - io.vertx.codec-http2 - 4.1.1.Final
        [23] - io.vertx.codec-dns - 4.1.1.Final
        [24] - io.vertx.resolver - 4.1.1.Final
        [25] - io.vertx.resolver-dns - 4.1.1.Final
        [26] - com.fasterxml.jackson.core.jackson-core - [2.9.9.2,)
        [27] - com.fasterxml.jackson.core.jackson-databind - [2.9.9.2,)
        [28] - com.fasterxml.jackson.core.jackson-annotations - [2.9.9.2,)
        [29] - vertx-web - 3.3.3
        [30] - vertx-auth-common - 3.3.3
        [31] - vertx-jdbc-client - 3.3.3
        [32] - vertx-sql-common - 3.3.3
        -->
        <!--
            These all need to be deployed in the OSGi container!

            Doing: 'mvn -Pdeploy-dependencies-vagrant install' will do that for the local vagrant deployment.
        -->
        <!--
            Vertx
        -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-common</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <version>${vertx.version}</version>
            <scope>provided</scope>
            <classifier>client</classifier>
            <type>js</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-amqp-bridge</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-amqp-client</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Cluster -->

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-hazelcast</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>${hazelcast.version}</version>
            <scope>compile</scope>
        </dependency>

        <!--
            Jackson
        -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>[2.9.9.2,)</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>[2.9.9.2,)</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>[2.9.9.2,)</version>
            <scope>compile</scope>
        </dependency>

        <!--
            Netty
        -->
        <!-- Codecs -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http2</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-dns</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-socks</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Handlers -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler-proxy</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Resolvers -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver-dns</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Support -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-buffer</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-common</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--
            Needed for full JTA support required by hazelcast.
            org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1
        -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jta_1.1_spec</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>io.vertx</groupId>-->
        <!--<artifactId>vertx-jgroups</artifactId>-->
        <!--<version>3.3.3</version>-->
        <!--<scope>compile</scope>-->
        <!--</dependency>-->

        <!--
            Test
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-runtime</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <!--
            These are for being able to run aps-config-manager and dependent bundles in unit tests
            using aps-runtime. It feels better running the real thing rather than fake config.
        -->

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-vertx-cluster-datastore-service-provider</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-filesystem-service-provider</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!--
                Mixins
            -->
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>groovy-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                        <mixin>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>build-number-mixin</artifactId>
                            <version>${project.version}</version>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <aps.vertx.clustered>true</aps.vertx.clustered>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
