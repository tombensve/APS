<?xml version="1.0" encoding="UTF-8"?>
<!--

    PROJECT
        Name
            OSGi Application Platform Services

        Code Version
            1.0.0

        Description
            APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.

    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.

    LICENSE
        Apache 2.0 (Open Source)

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!

-->
<!--suppress CheckValidXmlInScriptTagBody -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>se.natusoft.osgi.aps</groupId>
    <artifactId>APS</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>

    <name>OSGi Application Platform Services</name>

    <url>https://github.com/tombensve/APS</url>

    <!--
        Common properties
    -->
    <properties>
        <!--
            The version of this project. Run the set-version profile to update all poms with this version.
        -->
        <projectVersion>1.0.0</projectVersion>

        <!--
            This is the import package version specification for APS packages.
        -->
        <aps.import.ver>[0,2)</aps.import.ver>

        <!--
            This specifies the packaging type of the produced bundle to deploy. Should be either "jar" or "war",
            where "jar" is the default. To override this set this property in local pom.
        -->
        <server.deploy.artifact.type>jar</server.deploy.artifact.type>

        <!--
            Dependency versions
        -->
        <maven.bundle.plugin.version>2.3.6</maven.bundle.plugin.version>
        <vaadin.version>7.1.14</vaadin.version>
        <osgi.version>4.2.0</osgi.version>
        <mixin.plugin.version>0.1-alpha-34</mixin.plugin.version>
        <clm.version>2.1.3</clm.version>
        <ftpPlugin.version>1.0.1</ftpPlugin.version>
        <markdownDoc.version>1.4</markdownDoc.version>
    </properties>

    <!--
        Project Information
    -->
    <description>
        APS (Application Platform Services) - A smörgåsbord of OSGi platform type services.
    </description>

    <organization>
        <name>Natusoft AB</name>
        <url>http://www.natusoft.se/</url>
    </organization>
    <inceptionYear>2012</inceptionYear>
    <licenses>
        <license>
            <name>Apache 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Tommy Svensson</name>
            <email>tommy@natusoft.se</email>
        </developer>
    </developers>
    <scm>
        <connection>https://github.com/tombensve/APS.git</connection>
        <url/>
    </scm>
    <issueManagement>
        <system>github</system>
        <url>https://github.com/tombensve/APS/issues</url>
    </issueManagement>

    <dependencies>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <version>${osgi.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>APS-APIs</module>
        <module>APS-Core</module>
        <module>APS-Webs</module>
        <module>APS-Misc</module>
        <module>APS-Libraries</module>
        <module>APS-Network</module>
        <module>APS-Data</module>
        <module>APS-Auth</module>
        <module>Build</module>
        <module>APS-UserGuide</module>
        <module>APS-Archetypes</module>
        <module>Test</module>
        <!--<module>Test</module>-->
    </modules>

    <distributionManagement>
        <repository>
            <id>maven-repository-upload</id>
            <url>ftp://${maven.repo.upload}/${maven.base.path}</url>
        </repository>
    </distributionManagement>

    <build>
        <extensions>
            <!-- Enabling the use of FTP -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>2.3</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.odavid.maven.plugins</groupId>
                    <artifactId>mixin-maven-plugin</artifactId>
                    <version>${mixin.plugin.version}</version>
                    <extensions>true</extensions>
                </plugin>

                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>${maven.bundle.plugin.version}</version>
                    <extensions>true</extensions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
            </plugins>

        </pluginManagement>

        <plugins>

            <!--
                This is here so that the above plugin (tiles-maven-plugin)
                will se this plugin when merging tiles using it into the
                project.
            -->
            <plugin>
                <groupId>${project.groupId}</groupId>
                <artifactId>ServerDeployPlugin</artifactId>
                <version>${project.version}</version>
            </plugin>

            <!--
                Setup for java 7.
            -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

            <!--
                Define project assemblies.
            -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.1</version>
                <configuration>
                    <descriptors>
                        <descriptor>file:${basedir}/src/assembly/bin-dist.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>

            <!--
                Force checksums when installing to repository.

                I suspect that this might be unneccesarry since I think
                deploy creates checksums anyhow when deploying to external
                repository.
            -->
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <createChecksum>true</createChecksum>
                </configuration>
            </plugin>

            <!--
                Copy relevant license files to target on install.
            -->
            <plugin>
                <groupId>se.natusoft.tools.codelicmgr</groupId>
                <artifactId>CodeLicenseManager-maven-plugin</artifactId>
                <version>${clm.version}</version>

                <dependencies>
                    <dependency>
                        <groupId>se.natusoft.tools.codelicmgr</groupId>
                        <artifactId>CodeLicenseManager-licenses-common-opensource</artifactId>
                        <version>${clm.version}</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>install-licence-info</id>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>

                            <installOptions>
                                <verbose>true</verbose>
                                <licenseDir>target/license</licenseDir>
                                <thirdpartyLicenseDir>target/license/thirdparty</thirdpartyLicenseDir>
                            </installOptions>

                            <!--
                                Here we add those that are not auto resolved.
                            -->
                            <thirdpartyLicenses>
                                <license>
                                    <type>OSGi</type>
                                    <version>2.0</version>
                                    <licenseProducts>
                                        <product>
                                            <name>org.osgi.compendium-4.2.0</name>
                                            <web>http://www.osgi.org/</web>
                                        </product>
                                        <product>
                                            <name>org.osgi.core-4.2.0</name>
                                            <web>http://www.osgi.org/</web>
                                        </product>
                                    </licenseProducts>
                                </license>
                                <!--
                                    This one is not available in a maven repository so it is included
                                    under /lib. It is only used when building.
                                -->
                                <license>
                                    <type>GPL</type>
                                    <version>v2</version>
                                    <licenseProducts>
                                        <product>
                                            <name>MarkdownDoclet-3.0</name>
                                            <web>http://code.google.com/p/markdown-doclet/</web>
                                        </product>
                                    </licenseProducts>
                                </license>
                            </thirdpartyLicenses>

                            <createLicensesMarkdown>true</createLicensesMarkdown>
                            <markdownTargetSubdir>lics</markdownTargetSubdir>
                            <markdownLinkPrefix>https://github.com/tombensve/APS/blob/master/lics/</markdownLinkPrefix>

                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

    <!--
        Profiles
    -->
    <profiles>

        <!--
            This generates documentation.
        -->
        <profile>
            <id>generate-docs</id>
            <activation>
                <file>
                    <exists>docs/filesets</exists>
                </file>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>se.natusoft.tools.doc.markdowndoc</groupId>
                        <artifactId>markdowndoc-maven-plugin</artifactId>
                        <version>${markdownDoc.version}</version>

                        <executions>
                            <execution>
                                <id>generate-pdf-doc</id>
                                <goals>
                                    <goal>doc</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>

                                    <generatorOptions>
                                        <generator>pdf</generator>
                                        <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                        <parserOptions>markdownJavadoc=true</parserOptions>
                                    </generatorOptions>

                                    <pdfGeneratorOptions>
                                        <resultFile>${project.basedir}/docs/${project.artifactId}.pdf</resultFile>
                                        <pageSize>A4</pageSize>
                                        <title>${project.name}</title>
                                        <subject>User Guide</subject>
                                        <version>${project.version}</version>
                                        <author>Tommy Svensson</author>
                                        <copyright>Copyright © ${project.inceptionYear} ${project.organization.name}</copyright>
                                        <generateTitlePage>true</generateTitlePage>
                                        <generateTOC>true</generateTOC>
                                    </pdfGeneratorOptions>

                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-html-doc</id>
                                <goals>
                                    <goal>doc</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>

                                    <generatorOptions>
                                        <generator>html</generator>
                                        <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                        <parserOptions>markdownJavadoc=true</parserOptions>
                                    </generatorOptions>

                                    <htmlGeneratorOptions>
                                        <resultFile>${project.basedir}/docs/${project.artifactId}.html</resultFile>
                                        <makeFileLinksRelativeTo>${project.basedir}/docs/src+images/</makeFileLinksRelativeTo>
                                        <css>docs.css</css>
                                    </htmlGeneratorOptions>

                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-markdown-doc</id>
                                <goals>
                                    <goal>doc</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>

                                    <generatorOptions>
                                        <generator>md</generator>
                                        <inputPaths>${project.basedir}/docs/**/.*.fs</inputPaths>
                                        <parserOptions>markdownJavadoc=true</parserOptions>
                                    </generatorOptions>

                                    <mdGeneratorOptions>
                                        <resultFile>${project.basedir}/docs/${project.artifactId}.md</resultFile>
                                        <makeFileLinksRelativeTo>${project.basedir}/docs/src+images/</makeFileLinksRelativeTo>
                                    </mdGeneratorOptions>

                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>

            <!--
                This does not work for some reason, while all other mixins works fine!
                I completely fail to see what the problem is, and I get no errors!

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.odavid.maven.plugins</groupId>
                        <artifactId>mixin-maven-plugin</artifactId>
                        <configuration>
                            <mixins>
                                <mixin>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>documentation-mixin</artifactId>
                                    <version>${project.version}</version>
                                </mixin>
                            </mixins>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            -->

        </profile>

        <!--
            This profile deploys bundles to a server.
        -->
        <profile>
            <id>deploy-bundle</id>
            <activation>
                <file>
                    <missing>src/main/webapp</missing>
                </file>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.odavid.maven.plugins</groupId>
                        <artifactId>mixin-maven-plugin</artifactId>
                        <configuration>
                            <mixins>
                                <mixin>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>deploy-bundle-mixin</artifactId>
                                    <version>${project.version}</version>
                                </mixin>
                            </mixins>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            This profile deploys WAB bundles to a server.
        -->
        <profile>
            <id>deploy-web-bundle</id>
            <activation>
                <file>
                    <exists>src/main/webapp</exists>
                </file>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.odavid.maven.plugins</groupId>
                        <artifactId>mixin-maven-plugin</artifactId>
                        <configuration>
                            <mixins>
                                <mixin>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>deploy-web-bundle-mixin</artifactId>
                                    <version>${project.version}</version>
                                </mixin>
                            </mixins>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>apply-license-info</id>
            <build>
                <plugins>
                    <plugin>

                        <groupId>se.natusoft.tools.codelicmgr</groupId>
                        <artifactId>CodeLicenseManager-maven-plugin</artifactId>
                        <version>${clm.version}</version>

                        <dependencies>
                            <dependency>
                                <groupId>se.natusoft.tools.codelicmgr</groupId>
                                <artifactId>CodeLicenseManager-licenses-common-opensource</artifactId>
                                <version>${clm.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>se.natusoft.tools.codelicmgr</groupId>
                                <artifactId>CodeLicenseManager-source-updater-slashstar-comment</artifactId>
                                <version>${clm.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>se.natusoft.tools.codelicmgr</groupId>
                                <artifactId>CodeLicenseManager-source-updater-html-xml</artifactId>
                                <version>${clm.version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <project>
                                <codeVersion>${project.version}</codeVersion>
                                <name>${project.name}</name>
                                <description>${project.description}</description>
                            </project>
                            <!-- All options are optional. -->
                            <codeOptions>
                                <verbose>true</verbose>
                                <!-- If not set uses extension on source file to resolve. -->
                                <codeLanguage><!-- by source extension. -->
                                </codeLanguage>
                                <!-- If true updates the license information in source code. -->
                                <updateLicenseInfo>true</updateLicenseInfo>
                                <!-- If true updates the copyright information in source code. -->
                                <updateCopyright>true</updateCopyright>
                                <!-- If true updates the project information in source code. -->
                                <updateProject>true</updateProject>
                                <!-- If true will add authors information to source files that does not have it. This is not always implemented! -->
                                <addAuthorsBlock>true</addAuthorsBlock>
                                <!-- The directories to scan for source code to update with project & license information. -->
                                <sourceCodeDirs>
                                    src/main/java/**/.*.java,
                                    src/test/java/**/.*.java,
                                    src/main/groovy/**/.*.groovy,
                                    src/test/groovy/**/.*.groovy
                                    src/main/resources/**/.*.properties,
                                    src/main/resources/**/.*.xml,
                                    src/main/resources/**/.*.png,
                                    src/main/resources/**/.*.jpg,
                                    src/main/resources/**/.*.gif,
                                    src/assembly/**/.*.xml,
                                    src/main/webapp/**/.*.[cx][sm][sl],
                                    pom.xml
                                </sourceCodeDirs>

                            </codeOptions>

                            <userData>
                                <!--name></name>
                                <value></value-->
                            </userData>

                        </configuration>

                        <executions>
                            <execution>
                                <id>apply-licence-info</id>
                                <goals>
                                    <goal>apply</goal>
                                </goals>
                                <phase>generate-sources</phase>
                            </execution>
                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            This changes the version of this pom and all module poms, including parent.
            ${projectVersion} must be defined in properties above! So to update version,
            set it above and run this profile.
        -->
        <profile>
            <id>set-version</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>se.natusoft.tools.fileeditor</groupId>
                        <artifactId>file-editor-maven-support-plugin</artifactId>
                        <version>1.1</version>

                        <dependencies>
                            <dependency>
                                <groupId>se.natusoft.tools.fileeditor</groupId>
                                <artifactId>file-editor-maven-support-scripts</artifactId>
                                <version>1.1</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>update-version</id>
                                <goals>
                                    <goal>edit</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <scripts>
                                        <script>
                                            <code>
                                                <![CDATA[
                                                editor.moveToTopOfFile();
                                                // This will be either the parent version or the version of the root pom.
                                                if (editor.findFromCurrent("<version>")) {
                                                    editor.replaceCurrentLineBetween("<version>", "</version>", pomVersion);
                                                }
                                            ]]>
                                            </code>
                                            <sourcePath>${basedir}/pom.xml</sourcePath>
                                            <variables>
                                                <variable>
                                                    <name>pomVersion</name>
                                                    <value>${projectVersion}</value>
                                                </variable>
                                            </variables>
                                        </script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>intellij-javadoc-fix</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9</version>
                        <configuration>
                            <javadocExecutable>${java.home}/../bin/javadoc</javadocExecutable>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
