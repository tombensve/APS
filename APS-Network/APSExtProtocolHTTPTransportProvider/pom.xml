<?xml version="1.0" encoding="UTF-8"?>
<!--
    
    PROJECT
        Name
            APS External Protocol HTTP Transport Provider
        
        Code Version
            0.11.0
        
        Description
            This uses aps-external-protocol-extender to provide remote calls over HTTP. It makes
            any published service implementing se.natusoft.osgi.aps.net.rpc.streamed.service.StreamedRPCProtocolService
            available for calling services over HTTP.
        
    COPYRIGHTS
        Copyright (C) 2012 by Natusoft AB All rights reserved.
        
    LICENSE
        Apache 2.0 (Open Source)
        
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        
          http://www.apache.org/licenses/LICENSE-2.0
        
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
        
    AUTHORS
        Tommy Svensson (tommy@natusoft.se)
            Changes:
            2013-02-03: Created!
            
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>APS-Network</artifactId>
        <groupId>se.natusoft.osgi.aps</groupId>
        <version>0.11.0</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>aps-ext-protocol-http-transport-provider</artifactId>
    <packaging>war</packaging>

    <name>APS External Protocol HTTP Transport Provider</name>

    <description>
        This uses aps-external-protocol-extender to provide remote calls over HTTP. It makes
        any published service implementing se.natusoft.osgi.aps.net.rpc.streamed.service.StreamedRPCProtocolService
        available for calling services over HTTP.
    </description>

    <properties>
        <!-- 
            Bundle properties 
        -->

        <!-- The symbolic name of the bundle. Defaults to the artifact id, but can be overridden. -->
        <osgi.bundle.symbolic.name>${project.artifactId}</osgi.bundle.symbolic.name>

        <!-- The bundle activator class -->
        <osgi.bundle.activator>se.natusoft.osgi.aps.rpchttpextender.Activator</osgi.bundle.activator>

        <!-- The context path of a war bundle (WAB). Setting this enables Web-ContextPath: in MANIFEST.MF. -->
        <osgi.web.context.path>apsrpc</osgi.web.context.path>

        <!-- The osgi Bundle-ClassPath manifest entry. -->
        <osgi.bundle.classpath>
            WEB-INF/classes,
            WEB-INF/lib/aps-web-tools-${project.version}.jar,
            WEB-INF/lib/commons-codec-20041127.091804.jar
        </osgi.bundle.classpath>

        <!-- The bundle packages to export. -->
        <osgi.export.package>
        </osgi.export.package>

        <!-- The packages to import for the bundle. -->
        <osgi.import.package>
            se.natusoft.osgi.aps.api.auth.user;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.auth.user.model;version="${aps.import.ver}",
            se.natusoft.osgi.aps.api.misc.session;version="${aps.import.ver}",
            *
        </osgi.import.package>

        <!-- The private packages. -->
        <osgi.private.package>
            se.natusoft.osgi.aps.rpchttpextender,
            se.natusoft.osgi.aps.rpchttpextender.config,
            se.natusoft.osgi.aps.rpchttpextender.servlet,
            se.natusoft.osgi.arpchttpextenderttp.servlet.errors
        </osgi.private.package>

        <!-- The packages to export from dependent & embedded jars -->
        <osgi.export.dependency.package>
        </osgi.export.dependency.package>

        <!-- The resources to include in the bundle -->
        <osgi.include.resource>
        </osgi.include.resource>

        <!-- The default for embedding dependencies in bundle. -->
        <osgi.embed.dependency>*;scope=compile</osgi.embed.dependency>

        <!-- The directory whose content should be embedded into the bundle jar. -->
        <osgi.embed.directory>lib</osgi.embed.directory>

        <aps.config.classes>se.natusoft.osgi.aps.rpchttpextender.config.RPCServletConfig</aps.config.classes>

        <!--
            This specifies the packagin type of the produced bundle to deploy. Should be either "jar" or "war",
            where "jar" is the default. To override this set this property in local pom.
        -->
        <server.deploy.artifact.type>war</server.deploy.artifact.type>

        <!--
             Trigger tiles.
         -->
        <tile.deploy>${project.groupId}:DeployWABBundleTile:${project.version}</tile.deploy>

        <!--
            Misc properties
        -->
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--
            APS
        -->
        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-apis</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-tools-lib</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-web-tools</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-admin-web-service-provider</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency><!-- TODO: This is a strange dependency! -->
            <groupId>se.natusoft.osgi.aps</groupId>
            <artifactId>aps-json-service-provider</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Other
        -->

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>20041127.091804</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--
                Force the jar plugin to use the maven-bundle-plugin generated manifest.
            -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--
                OSGi bundle handling.
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <archive>
                        <manifestEntries>
                            <Bundle-ClassPath>${osgi.bundle.classpath}</Bundle-ClassPath>
                            <Web-ContextPath>${osgi.web.context.path}</Web-ContextPath>
                            <APS-Configs>${aps.config.classes}</APS-Configs>
                        </manifestEntries>
                    </archive>
                    <instructions>
                        <Export-Package>${osgi.export.package}</Export-Package>
                        <Import-Package>${osgi.import.package}</Import-Package>
                        <_exportcontents>${osgi.export.dependency.package}</_exportcontents>
                        <Private-Package>${osgi.private.package}</Private-Package>
                        <Include-Resource>${osgi.include.resource}</Include-Resource>
                        <Bundle-SymbolicName>${osgi.bundle.symbolic.name}</Bundle-SymbolicName>
                        <Bundle-Activator>${osgi.bundle.activator}</Bundle-Activator>
                        <Embed-Directory>${osgi.embed.directory}</Embed-Directory>
                        <Embed-Dependency>${osgi.embed.dependency}</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
